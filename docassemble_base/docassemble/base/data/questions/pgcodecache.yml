"Address":
  "bases": []
  "doc": "A geographic address."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6452"
  "insert": "Address"
  "methods":
  - "doc": "Returns the address formatted as a block, as in a mailing.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Address.block'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6674"
    "insert": ".block()"
    "name": "block"
    "tag": ".block(self, language=None, international=False, show_country=None)"
  - "doc": "Returns the unit, formatted appropriately"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6738"
    "insert": ".formatted_unit()"
    "name": "formatted_unit"
    "tag": ".formatted_unit(self, language=None, require=False)"
  - "doc": "Determines the latitude and longitude of the location from its components.  If an address is supplied, the address fields that are not already populated will be...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Address.geocode'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6545"
    "insert": ".geocode()"
    "name": "geocode"
    "tag": ".geocode(self, address=None, reset=False)"
  - "doc": "This exists for backward compatibility only. Use .geocode()."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6542"
    "insert": ".geolocate()"
    "name": "geolocate"
    "tag": ".geolocate(self, address=None, reset=False)"
  - "doc": "Returns the raw data that the geocoding service returned."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6530"
    "insert": ".get_geocode_response()"
    "name": "get_geocode_response"
    "tag": ".get_geocode_response(self)"
  - "doc": "Returns the first line of the address, including the unit\nnumber if there is one.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Address.line_one'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6754"
    "insert": ".line_one()"
    "name": "line_one"
    "tag": ".line_one(self, language=None)"
  - "doc": "Returns the second line of the address, including the city,\nstate and zip code.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Address.line_two'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6767"
    "insert": ".line_two()"
    "name": "line_two"
    "tag": ".line_two(self, language=None)"
  - "doc": "<a target='_blank' href='https://docassemble.org/docs/objects.html#Address.normalize'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6649"
    "insert": ".normalize()"
    "name": "normalize"
    "tag": ".normalize(self, long_format=False)"
  - "doc": "Returns a one-line address.  Primarily used internally for geocoding.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Address.on_one_line'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6470"
    "insert": ".on_one_line()"
    "name": "on_one_line"
    "tag": ".on_one_line(self, include_unit=True, omit_default_country=True, language=None, show_country=None)"
  - "doc": "Resets the geocoding information<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Address.reset_geocoding'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6668"
    "insert": ".reset_geocoding()"
    "name": "reset_geocoding"
    "tag": ".reset_geocoding(self)"
  - "doc": "This exists for backward compatibility only. Use .reset_geocoding()."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6665"
    "insert": ".reset_geolocation()"
    "name": "reset_geolocation"
    "tag": ".reset_geolocation(self)"
  - "doc": "Returns True or False depending on whether the geocoding process has been performed."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6511"
    "insert": ".was_geocoded()"
    "name": "was_geocoded"
    "tag": ".was_geocoded(self)"
  - "doc": "Returns True or False depending on whether the geocoding process has been performed and has been performed successfully."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6516"
    "insert": ".was_geocoded_successfully()"
    "name": "was_geocoded_successfully"
    "tag": ".was_geocoded_successfully(self)"
  "name": "Address"
"Asset":
  "bases":
  - "FinancialList"
  "doc": "A FinancialList representing a person's assets."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7266"
  "insert": "Asset"
  "methods": []
  "name": "Asset"
"Case":
  "bases": []
  "doc": "Represents a case in court."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L330"
  "insert": "Case"
  "methods":
  - "doc": "Returns a list of all parties and their children,\nchildren's children, etc.  Does not force the gathering of the\nparties.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Case.all_known_people'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L445"
    "insert": ".all_known_people()"
    "name": "all_known_people"
    "tag": ".all_known_people(self)"
  - "doc": "Returns the text for the case ID that will appear in the case\ncaption.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Case.case_id_in_caption'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L412"
    "insert": ".case_id_in_caption()"
    "name": "case_id_in_caption"
    "tag": ".case_id_in_caption(self, **kwargs)"
  - "doc": "Runs code, if any exists, to determine what court has jurisdiction\nover the case.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Case.determine_court'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L423"
    "insert": ".determine_court()"
    "name": "determine_court"
    "tag": ".determine_court(self, **kwargs)"
  - "doc": "Returns a list of all parties.  Gathers the parties if\nthey have not been gathered yet.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Case.parties'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L456"
    "insert": ".parties()"
    "name": "parties"
    "tag": ".parties(self)"
  - "doc": "Given a person object, it looks through the parties to the\ncase and returns the name of the party to which the person belongs.\nReturns &quot;third party&quot; i...<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Case.role_of'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L431"
    "insert": ".role_of()"
    "name": "role_of"
    "tag": ".role_of(self, party)"
  - "doc": "Initializes attributes for the different types of parties in the\ncase.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Case.set_action_type'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L348"
    "insert": ".set_action_type()"
    "name": "set_action_type"
    "tag": ".set_action_type(self, the_value)"
  "name": "Case"
"ChildList":
  "bases":
  - "DAList"
  "doc": "Represents a list of children."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7169"
  "insert": "ChildList"
  "methods": []
  "name": "ChildList"
"City":
  "bases":
  - "Address"
  "doc": "A geographic address specific only to a city."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6806"
  "insert": "City"
  "methods": []
  "name": "City"
"Court":
  "bases": []
  "doc": "Represents a court of law."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L297"
  "insert": "Court"
  "methods":
  - "doc": "Returns the top line of the first page of a pleading filed in the\ncourt.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#Court.in_the_court'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L306"
    "insert": ".in_the_court()"
    "name": "in_the_court"
    "tag": ".in_the_court(self, **kwargs)"
  "name": "Court"
"DA":
  "doc": !!null "null"
  "git": !!null "null"
  "insert": "DA"
  "name": "DA"
"DABreadCrumbs":
  "bases": []
  "doc": "The base class for all docassemble objects."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8572"
  "insert": "DABreadCrumbs"
  "methods":
  - "doc": "Returns the HTML of the container element. This is called from .show()."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8584"
    "insert": ".container()"
    "name": "container"
    "tag": ".container(self, items)"
  - "doc": "Returns a list of breadcrumb names of the &quot;parent&quot; questions, followed by the current question."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8574"
    "insert": ".get_crumbs()"
    "name": "get_crumbs"
    "tag": ".get_crumbs(self)"
  - "doc": "Returns the HTML for an individual breadcrumb. This is called from .show()."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8587"
    "insert": ".inner()"
    "name": "inner"
    "tag": ".inner(self, label, active)"
  - "doc": "Displays the breadcrumbs."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8577"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self)"
  "name": "DABreadCrumbs"
"DACloudStorage":
  "bases": []
  "doc": "Returns an object that can be used to interface with S3 or Azure."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5740"
  "insert": "DACloudStorage"
  "methods": []
  "name": "DACloudStorage"
"DAContext":
  "bases":
  - "DADict"
  "doc": "A base class for objects that behave like Python dictionaries."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5255"
  "insert": "DAContext"
  "methods": []
  "name": "DAContext"
"DADict":
  "bases": []
  "doc": "A base class for objects that behave like Python dictionaries."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2241"
  "insert": "DADict"
  "methods":
  - "doc": "Returns HTML for adding an item to a dict<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.add_action'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3050"
    "insert": ".add_action()"
    "name": "add_action"
    "tag": ".add_action(self, label=None, message=None, url_only=False, icon='plus-circle', color=None, size='sm', block=None, classname=None)"
  - "doc": "Returns True if the values of all keys are false.  If one or more\nkeys are provided as arguments, returns True if all of the\nvalues of those keys are false.  If...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.all_false'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2338"
    "insert": ".all_false()"
    "name": "all_false"
    "tag": ".all_false(self, *pargs, **kwargs)"
  - "doc": "Returns True if the values of all keys are true.  If one or more\nkeys are provided as arguments, returns True if all of the\nvalues of those keys are true.  If t...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.all_true'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2377"
    "insert": ".all_true()"
    "name": "all_true"
    "tag": ".all_true(self, *pargs, **kwargs)"
  - "doc": "Returns the opposite of all_true().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.any_false'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2374"
    "insert": ".any_false()"
    "name": "any_false"
    "tag": ".any_false(self, *pargs, **kwargs)"
  - "doc": "Returns the opposite of all_false().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.any_true'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2371"
    "insert": ".any_true()"
    "name": "any_true"
    "tag": ".any_true(self, *pargs, **kwargs)"
  - "doc": "Returns a human-readable expression of the object based on its\ninstanceName, using singular or plural depending on whether\nthe dictionary has one key or more th...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.as_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2567"
    "insert": ".as_noun()"
    "name": "as_noun"
    "tag": ".as_noun(self, *pargs, **kwargs)"
  - "doc": "Returns a human-readable expression of the object based on its\ninstanceName, without making it plural.  E.g.,\nplayer.as_singular_noun() returns &quot;player&quo...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.as_singular_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2554"
    "insert": ".as_singular_noun()"
    "name": "as_singular_noun"
    "tag": ".as_singular_noun(self)"
  - "doc": "Removes all the items from the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.clear'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2879"
    "insert": ".clear()"
    "name": "clear"
    "tag": ".clear(self)"
  - "doc": "Returns the keys of the list, separated by commas, with\n&quot;and&quot; before the last key.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.comma_and_list'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2820"
    "insert": ".comma_and_list()"
    "name": "comma_and_list"
    "tag": ".comma_and_list(self, **kwargs)"
  - "doc": "Returns a dictionary containing the key/value pairs that are complete.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.complete_elements'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2628"
    "insert": ".complete_elements()"
    "name": "complete_elements"
    "tag": ".complete_elements(self, complete_attribute=None)"
  - "doc": "Returns a copy of the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.copy'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2882"
    "insert": ".copy()"
    "name": "copy"
    "tag": ".copy(self)"
  - "doc": "Deletes items.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.delitem'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2323"
    "insert": ".delitem()"
    "name": "delitem"
    "tag": ".delitem(self, *pargs)"
  - "doc": "Like does_verb(), except it returns the past tense of the verb.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.did_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2546"
    "insert": ".did_verb()"
    "name": "did_verb"
    "tag": ".did_verb(self, the_verb, **kwargs)"
  - "doc": "Returns a Python set consisting of the keys of the current dict,\nconsidered as a set, that do not exist in the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.difference'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2954"
    "insert": ".difference()"
    "name": "difference"
    "tag": ".difference(self, other_set)"
  - "doc": "Returns the appropriate conjugation of the given verb depending on\nwhether there is only one key in the dictionary or multiple\nkeys.  E.g., player.does_verb('fi...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.does_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2528"
    "insert": ".does_verb()"
    "name": "does_verb"
    "tag": ".does_verb(self, the_verb, **kwargs)"
  - "doc": "Returns the keys for which the corresponding value is false.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.false_values'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2415"
    "insert": ".false_values()"
    "name": "false_values"
    "tag": ".false_values(self, insertion_order=False)"
  - "doc": "Substitutes a different instance name for the object and its subobjects."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2297"
    "insert": ".fix_instance_name()"
    "name": "fix_instance_name"
    "tag": ".fix_instance_name(self, old_instance_name, new_instance_name)"
  - "doc": "Causes the dictionary items to be gathered and named.  Returns True.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2717"
    "insert": ".gather()"
    "name": "gather"
    "tag": ".gather(self, item_object_type=None, number=None, minimum=None, complete_attribute=None, keys=None)"
  - "doc": "Ensures all items in the dictionary are complete and then returns True.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.gathered_and_complete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2695"
    "insert": ".gathered_and_complete()"
    "name": "gathered_and_complete"
    "tag": ".gathered_and_complete(self)"
  - "doc": "Returns True if the gathering process has started or the number of elements is non-zero."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2614"
    "insert": ".gathering_started()"
    "name": "gathering_started"
    "tag": ".gathering_started(self)"
  - "doc": "Returns the value of a given key.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.get'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2874"
    "insert": ".get()"
    "name": "get"
    "tag": ".get(self, *pargs)"
  - "doc": "Compute a fresh value of the given item and return it.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.getitem_fresh'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2333"
    "insert": ".getitem_fresh()"
    "name": "getitem_fresh"
    "tag": ".getitem_fresh(self, item)"
  - "doc": "Returns whether the dictionary has been gathered<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.has_been_gathered'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2521"
    "insert": ".has_been_gathered()"
    "name": "has_been_gathered"
    "tag": ".has_been_gathered(self)"
  - "doc": "Returns True if key is in the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.has_key'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2885"
    "insert": ".has_key()"
    "name": "has_key"
    "tag": ".has_key(self, key)"
  - "doc": "Code that runs just after a dictionary is marked as gathered.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.hook_after_gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3096"
    "insert": ".hook_after_gather()"
    "name": "hook_after_gather"
    "tag": ".hook_after_gather(self, *pargs, **kwargs)"
  - "doc": "Code that runs just before a dictionary is marked as gathered.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.hook_on_gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3093"
    "insert": ".hook_on_gather()"
    "name": "hook_on_gather"
    "tag": ".hook_on_gather(self, *pargs, **kwargs)"
  - "doc": "Code that runs when an item is marked as complete.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.hook_on_item_complete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3099"
    "insert": ".hook_on_item_complete()"
    "name": "hook_on_item_complete"
    "tag": ".hook_on_item_complete(self, item, *pargs, **kwargs)"
  - "doc": "Code that runs when an item is removed from the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.hook_on_remove'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3102"
    "insert": ".hook_on_remove()"
    "name": "hook_on_remove"
    "tag": ".hook_on_remove(self, item, *pargs, **kwargs)"
  - "doc": "Creates a new object and creates an entry in the dictionary for it.\nThe first argument is the name of the dictionary key to set.\nTakes an optional second argume...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.initializeObject'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2428"
    "insert": ".initializeObject()"
    "name": "initializeObject"
    "tag": ".initializeObject(self, *pargs, **kwargs)"
  - "doc": "Returns a Python set consisting of the keys of the current dict,\nconsidered as a set, that also exist in the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.intersection'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2947"
    "insert": ".intersection()"
    "name": "intersection"
    "tag": ".intersection(self, other_set)"
  - "doc": "Invalidate items.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.invalidate_item'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2328"
    "insert": ".invalidate_item()"
    "name": "invalidate_item"
    "tag": ".invalidate_item(self, *pargs)"
  - "doc": "Returns True if no elements overlap between the keys of the current\ndict, considered as a set, and the other_set.  Otherwise,\nreturns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.isdisjoint'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2961"
    "insert": ".isdisjoint()"
    "name": "isdisjoint"
    "tag": ".isdisjoint(self, other_set)"
  - "doc": "Returns True if the keys of the current dict, considered as a set,\nis a subset of the other_set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.issubset'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2969"
    "insert": ".issubset()"
    "name": "issubset"
    "tag": ".issubset(self, other_set)"
  - "doc": "Returns True if the other_set is a subset of the keys of the\ncurrent dict, considered as a set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.issuperset'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2976"
    "insert": ".issuperset()"
    "name": "issuperset"
    "tag": ".issuperset(self, other_set)"
  - "doc": "Returns the value for the given key, or a blank value if the key does not exist.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.item'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2888"
    "insert": ".item()"
    "name": "item"
    "tag": ".item(self, key)"
  - "doc": "Returns HTML for editing the items in a dictionary<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.item_actions'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3004"
    "insert": ".item_actions()"
    "name": "item_actions"
    "tag": ".item_actions(self, *pargs, **kwargs)"
  - "doc": "Returns a variable name for an item, suitable for use in force_ask() and other functions.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.item_name'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2320"
    "insert": ".item_name()"
    "name": "item_name"
    "tag": ".item_name(self, item)"
  - "doc": "Returns a copy of the items of the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.items'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2894"
    "insert": ".items()"
    "name": "items"
    "tag": ".items(self)"
  - "doc": "Iterates through the keys and values of the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.iteritems'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2898"
    "insert": ".iteritems()"
    "name": "iteritems"
    "tag": ".iteritems(self)"
  - "doc": "Iterates through the keys of the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.iterkeys'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2902"
    "insert": ".iterkeys()"
    "name": "iterkeys"
    "tag": ".iterkeys(self)"
  - "doc": "Iterates through the values of the dictionary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.itervalues'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2906"
    "insert": ".itervalues()"
    "name": "itervalues"
    "tag": ".itervalues(self)"
  - "doc": "Returns the keys of the dictionary as a Python list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.keys'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2841"
    "insert": ".keys()"
    "name": "keys"
    "tag": ".keys(self)"
  - "doc": "Initializes new dictionary entries.  Each entry is set to a\nnew object.  For example, if the dictionary is called positions,\ncalling positions.new('file clerk')...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.new'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2460"
    "insert": ".new()"
    "name": "new"
    "tag": ".new(self, *pargs, **kwargs)"
  - "doc": "Returns the number of keys in the dictionary.  Forces the gathering of the\ndictionary items if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.number'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2607"
    "insert": ".number()"
    "name": "number"
    "tag": ".number(self)"
  - "doc": "Returns the number of keys in the dictionary, spelling out the number if ten\nor below.  Forces the gathering of the dictionary items if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.number_as_word'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2624"
    "insert": ".number_as_word()"
    "name": "number_as_word"
    "tag": ".number_as_word(self, language=None)"
  - "doc": "Returns the number of elements in the list that have been gathered so far."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2619"
    "insert": ".number_gathered()"
    "name": "number_gathered"
    "tag": ".number_gathered(self, if_started=False)"
  - "doc": "Remove a given key from the dictionary and return its value<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.pop'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2859"
    "insert": ".pop()"
    "name": "pop"
    "tag": ".pop(self, *pargs)"
  - "doc": "Remove an arbitrary key from the dictionary and return its value<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.popitem'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2866"
    "insert": ".popitem()"
    "name": "popitem"
    "tag": ".popitem(self)"
  - "doc": "If the variable name is &quot;plaintiff&quot; and the target is &quot;fish,&quot;\nreturns &quot;plaintiff's fish&quot; if there is one item in the dictionary,\na..."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2598"
    "insert": ".possessive()"
    "name": "possessive"
    "tag": ".possessive(self, target, **kwargs)"
  - "doc": "Returns them, or the pronoun for the only element.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.pronoun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2989"
    "insert": ".pronoun()"
    "name": "pronoun"
    "tag": ".pronoun(self, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.pronoun_objective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2998"
    "insert": ".pronoun_objective()"
    "name": "pronoun_objective"
    "tag": ".pronoun_objective(self, **kwargs)"
  - "doc": "Returns &quot;their &lt;target&gt;.&quot; <br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.pronoun_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2983"
    "insert": ".pronoun_possessive()"
    "name": "pronoun_possessive"
    "tag": ".pronoun_possessive(self, target, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.pronoun_subjective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3001"
    "insert": ".pronoun_subjective()"
    "name": "pronoun_subjective"
    "tag": ".pronoun_subjective(self, **kwargs)"
  - "doc": "Returns the output of the quantity_noun() function using the number\nof elements in the dictionary as the quantity.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.quantity_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2562"
    "insert": ".quantity_noun()"
    "name": "quantity_noun"
    "tag": ".quantity_noun(self, *pargs, **kwargs)"
  - "doc": "Indicates that there is more to be gathered<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.reset_gathered'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2482"
    "insert": ".reset_gathered()"
    "name": "reset_gathered"
    "tag": ".reset_gathered(self, recursive=False, only_if_empty=False, mark_incomplete=False)"
  - "doc": "Sets the object_type of the DADict<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.set_object_type'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2282"
    "insert": ".set_object_type()"
    "name": "set_object_type"
    "tag": ".set_object_type(self, object_type)"
  - "doc": "Set a key to a default value if it does not already exist in the dictionary<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.setdefault'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2871"
    "insert": ".setdefault()"
    "name": "setdefault"
    "tag": ".setdefault(self, *pargs)"
  - "doc": "Returns a shallow copy of the dictionary containing only the keys provided in the parameters.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.slice'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2509"
    "insert": ".slice()"
    "name": "slice"
    "tag": ".slice(self, *pargs)"
  - "doc": "Returns the keys for which the corresponding value is true.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.true_values'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2410"
    "insert": ".true_values()"
    "name": "true_values"
    "tag": ".true_values(self, insertion_order=False)"
  - "doc": "Returns a Python set consisting of the keys of the current dict,\nconsidered as a set, combined with the elements of the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.union'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2940"
    "insert": ".union()"
    "name": "union"
    "tag": ".union(self, other_set)"
  - "doc": "Updates the dictionary with the keys and values of another dictionary<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.update'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2852"
    "insert": ".update()"
    "name": "update"
    "tag": ".update(self, *pargs, **kwargs)"
  - "doc": "Returns the values of the dictionary as a Python list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DADict.values'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2848"
    "insert": ".values()"
    "name": "values"
    "tag": ".values(self)"
  "name": "DADict"
"DAEmail":
  "bases": []
  "doc": "An object type used to represent an e-mail that has been received\nthrough the e-mail receiving feature."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4695"
  "insert": "DAEmail"
  "methods": []
  "name": "DAEmail"
"DAEmailRecipient":
  "bases": []
  "doc": "An object type used within DAEmail objects to represent a single\ne-mail address and the name associated with that e-mail address."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4655"
  "insert": "DAEmailRecipient"
  "methods":
  - "doc": "Returns a properly formatted e-mail address for the recipient.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAEmailRecipient.email_address'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4670"
    "insert": ".email_address()"
    "name": "email_address"
    "tag": ".email_address(self, include_name=None)"
  - "doc": "<a target='_blank' href='https://docassemble.org/docs/objects.html#DAEmailRecipient.exists'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4677"
    "insert": ".exists()"
    "name": "exists"
    "tag": ".exists(self)"
  "name": "DAEmailRecipient"
"DAEmailRecipientList":
  "bases":
  - "DAList"
  "doc": "Represents a list of DAEmailRecipient objects."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4640"
  "insert": "DAEmailRecipientList"
  "methods": []
  "name": "DAEmailRecipientList"
"DAEmpty":
  "bases":
  - "object"
  "doc": "An object that does nothing except avoid triggering errors about missing information."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L396"
  "insert": "DAEmpty"
  "methods": []
  "name": "DAEmpty"
"DAFile":
  "bases": []
  "doc": "Used internally by docassemble to represent a file."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3580"
  "insert": "DAFile"
  "methods":
  - "doc": "Makes the contents of the file a Bates-numbered of the file or, if provided, another file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.bates_number'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3820"
    "insert": ".bates_number()"
    "name": "bates_number"
    "tag": ".bates_number(self, *pargs, **kwargs)"
  - "doc": "Returns the path with which the file can be accessed using S3 or Azure Blob Storage, or None if cloud storage is not enabled."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4118"
    "insert": ".cloud_path()"
    "name": "cloud_path"
    "tag": ".cloud_path(self, filename=None)"
  - "doc": "Ensures that changes to the file are saved and will be available in\nthe future.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.commit'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4133"
    "insert": ".commit()"
    "name": "commit"
    "tag": ".commit(self)"
  - "doc": "Converts the file in-place to a different file extension.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.convert_to'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3609"
    "insert": ".convert_to()"
    "name": "convert_to"
    "tag": ".convert_to(self, output_extension)"
  - "doc": "Makes the contents of the file the same as those of another file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.copy_into'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3811"
    "insert": ".copy_into()"
    "name": "copy_into"
    "tag": ".copy_into(self, other_file)"
  - "doc": "Makes corrections to the file and changes it in-place if necessary.\nRaises an exception if the file is corrupt and cannot be fixed.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.fix_up'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3655"
    "insert": ".fix_up()"
    "name": "fix_up"
    "tag": ".fix_up(self)"
  - "doc": "Makes the contents of the file the contents of the given URL.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.from_url'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3948"
    "insert": ".from_url()"
    "name": "from_url"
    "tag": ".from_url(self, url)"
  - "doc": "Returns the alt text for the file.  If no alt text is defined, None is returned.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.get_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3676"
    "insert": ".get_alt_text()"
    "name": "get_alt_text"
    "tag": ".get_alt_text(self)"
  - "doc": "Returns a list of variables used by the Jinja2 templating of a DOCX template file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.get_docx_variables'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3933"
    "insert": ".get_docx_variables()"
    "name": "get_docx_variables"
    "tag": ".get_docx_variables(self)"
  - "doc": "Returns a list of fields that exist in the PDF document<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.get_pdf_fields'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3936"
    "insert": ".get_pdf_fields()"
    "name": "get_pdf_fields"
    "tag": ".get_pdf_fields(self)"
  - "doc": "Creates the file on the system if it does not already exist, and ensures that the file is ready to be used.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.initialize'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3690"
    "insert": ".initialize()"
    "name": "initialize"
    "tag": ".initialize(self, **kwargs)"
  - "doc": "Returns True if the file is a PDF file and it is encrypted, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.is_encrypted'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3971"
    "insert": ".is_encrypted()"
    "name": "is_encrypted"
    "tag": ".is_encrypted(self)"
  - "doc": "Makes the contents of the file an OCRed PDF of the file or, if provided, another file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.make_ocr_pdf'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3884"
    "insert": ".make_ocr_pdf()"
    "name": "make_ocr_pdf"
    "tag": ".make_ocr_pdf(self, *pargs, **kwargs)"
  - "doc": "In the background, makes the contents of the file an OCRed PDF of the file or, if provided, another file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.make_ocr_pdf_in_background'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3888"
    "insert": ".make_ocr_pdf_in_background()"
    "name": "make_ocr_pdf_in_background"
    "tag": ".make_ocr_pdf_in_background(self, *pargs, **kwargs)"
  - "doc": "Returns the number of pages in the file, if a PDF file, and 1 otherwise<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.num_pages'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4037"
    "insert": ".num_pages()"
    "name": "num_pages"
    "tag": ".num_pages(self)"
  - "doc": "Returns a file path at which a PDF page image can be accessed."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4062"
    "insert": ".page_path()"
    "name": "page_path"
    "tag": ".page_path(self, page, prefix, wait=True)"
  - "doc": "Returns a path and filename at which the file can be accessed.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.path'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4123"
    "insert": ".path()"
    "name": "path"
    "tag": ".path(self)"
  - "doc": "Returns True if the PNGs have been generated.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.pngs_ready'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3989"
    "insert": ".pngs_ready()"
    "name": "pngs_ready"
    "tag": ".pngs_ready(self)"
  - "doc": "Allows or disallows access to the file for a given privilege.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.privilege_access'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4237"
    "insert": ".privilege_access()"
    "name": "privilege_access"
    "tag": ".privilege_access(self, *pargs, **kwargs)"
  - "doc": "Returns the contents of the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.readlines'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3792"
    "insert": ".readlines()"
    "name": "readlines"
    "tag": ".readlines(self)"
  - "doc": "Ensures that the file is ready to be used.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.retrieve'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3755"
    "insert": ".retrieve()"
    "name": "retrieve"
    "tag": ".retrieve(self)"
  - "doc": "Sets the alt text for the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.set_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3673"
    "insert": ".set_alt_text()"
    "name": "set_alt_text"
    "tag": ".set_alt_text(self, alt_text)"
  - "doc": "Sets attributes of the file stored on the server.  Takes optional keyword arguments private and persistent, which must be boolean values.  Also takes the option...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.set_attributes'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4189"
    "insert": ".set_attributes()"
    "name": "set_attributes"
    "tag": ".set_attributes(self, **kwargs)"
  - "doc": "Sets the MIME type of the file<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.set_mimetype'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3681"
    "insert": ".set_mimetype()"
    "name": "set_mimetype"
    "tag": ".set_mimetype(self, mimetype)"
  - "doc": "Inserts markup that displays the file as an image.  Takes\noptional keyword arguments width and alt_text.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.show'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4141"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self, width=None, wait=True, alt_text=None)"
  - "doc": "Returns the number of bytes in the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.size_in_bytes'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3775"
    "insert": ".size_in_bytes()"
    "name": "size_in_bytes"
    "tag": ".size_in_bytes(self)"
  - "doc": "Returns the contents of the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.slurp'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3780"
    "insert": ".slurp()"
    "name": "slurp"
    "tag": ".slurp(self, auto_decode=True)"
  - "doc": "Returns a URL to the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.url_for'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4178"
    "insert": ".url_for()"
    "name": "url_for"
    "tag": ".url_for(self, **kwargs)"
  - "doc": "Allows or disallows access to the file for a given user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.user_access'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4201"
    "insert": ".user_access()"
    "name": "user_access"
    "tag": ".user_access(self, *pargs, **kwargs)"
  - "doc": "Returns True if the file uses AcroForm, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.uses_acroform'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3966"
    "insert": ".uses_acroform()"
    "name": "uses_acroform"
    "tag": ".uses_acroform(self)"
  - "doc": "Writes the given content to the file, replacing existing contents.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFile.write'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3800"
    "insert": ".write()"
    "name": "write"
    "tag": ".write(self, content, binary=False)"
  "name": "DAFile"
"DAFileCollection":
  "bases": []
  "doc": "Used internally by docassemble to refer to a collection of DAFile\nobjects, usually representing the same document in different\nformats.  Attributes represent fi..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4258"
  "insert": "DAFileCollection"
  "methods":
  - "doc": "Makes the contents of the pdf file a Bates-numbered PDF."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4366"
    "insert": ".bates_number()"
    "name": "bates_number"
    "tag": ".bates_number(self, **kwargs)"
  - "doc": "Makes corrections to the files and changes them in-place if necessary.\nRaises an exception if a file is corrupt and cannot be fixed.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.fix_up'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4273"
    "insert": ".fix_up()"
    "name": "fix_up"
    "tag": ".fix_up(self)"
  - "doc": "Returns the alt text for the first file in the collection.  If no\nalt text is defined, None is returned.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.get_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4284"
    "insert": ".get_alt_text()"
    "name": "get_alt_text"
    "tag": ".get_alt_text(self)"
  - "doc": "Returns a list of variables used by the Jinja2 templating of a DOCX template file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.get_docx_variables'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4322"
    "insert": ".get_docx_variables()"
    "name": "get_docx_variables"
    "tag": ".get_docx_variables(self)"
  - "doc": "Returns a list of fields that exist in the PDF document<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.get_pdf_fields'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4327"
    "insert": ".get_pdf_fields()"
    "name": "get_pdf_fields"
    "tag": ".get_pdf_fields(self)"
  - "doc": "Returns True if there is a PDF file and it is encrypted, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.is_encrypted'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4298"
    "insert": ".is_encrypted()"
    "name": "is_encrypted"
    "tag": ".is_encrypted(self)"
  - "doc": "Makes the contents of the pdf file an OCRed PDF."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4371"
    "insert": ".make_ocr_pdf()"
    "name": "make_ocr_pdf"
    "tag": ".make_ocr_pdf(self, **kwargs)"
  - "doc": "In the background, makes the contents of the pdf file an OCRed PDF."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4376"
    "insert": ".make_ocr_pdf_in_background()"
    "name": "make_ocr_pdf_in_background"
    "tag": ".make_ocr_pdf_in_background(self, **kwargs)"
  - "doc": "If there is a PDF file, returns the number of pages in the file, otherwise returns 1.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.num_pages'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4303"
    "insert": ".num_pages()"
    "name": "num_pages"
    "tag": ".num_pages(self)"
  - "doc": "Returns a path and filename at which one of the attachments in the\ncollection can be accessed.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.path'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4313"
    "insert": ".path()"
    "name": "path"
    "tag": ".path(self)"
  - "doc": "Allows or disallows access to the file(s) for a given privilege.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.privilege_access'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4351"
    "insert": ".privilege_access()"
    "name": "privilege_access"
    "tag": ".privilege_access(self, *pargs, **kwargs)"
  - "doc": "Sets the alt text of each of the files in the collection.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.set_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4279"
    "insert": ".set_alt_text()"
    "name": "set_alt_text"
    "tag": ".set_alt_text(self, alt_text)"
  - "doc": "Sets attributes of the file(s) stored on the server.  Takes optional keyword arguments private and persistent, which must be boolean values.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.set_attributes'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4338"
    "insert": ".set_attributes()"
    "name": "set_attributes"
    "tag": ".set_attributes(self, **kwargs)"
  - "doc": "Inserts markup that displays each part of the file collection as an\nimage or link.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.show'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4357"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self, **kwargs)"
  - "doc": "Returns a URL to one of the attachments in the collection.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.url_for'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4332"
    "insert": ".url_for()"
    "name": "url_for"
    "tag": ".url_for(self, **kwargs)"
  - "doc": "Allows or disallows access to the file(s) for a given user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.user_access'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4345"
    "insert": ".user_access()"
    "name": "user_access"
    "tag": ".user_access(self, *pargs, **kwargs)"
  - "doc": "Returns True if there is a PDF file and it uses AcroForm, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileCollection.uses_acroform'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4293"
    "insert": ".uses_acroform()"
    "name": "uses_acroform"
    "tag": ".uses_acroform(self)"
  "name": "DAFileCollection"
"DAFileList":
  "bases":
  - "DAList"
  "doc": "Used internally by docassemble to refer to a list of files, such as\na list of files uploaded to a single variable."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4383"
  "insert": "DAFileList"
  "methods":
  - "doc": "Makes the contents of the first file a Bates-numbered PDF of the list of files."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4492"
    "insert": ".bates_number()"
    "name": "bates_number"
    "tag": ".bates_number(self, **kwargs)"
  - "doc": "Converts each file in-place to a different file extension.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.convert_to'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4425"
    "insert": ".convert_to()"
    "name": "convert_to"
    "tag": ".convert_to(self, output_extension)"
  - "doc": "Makes corrections to the files and changes them in-place if necessary.\nRaises an exception if a file is corrupt and cannot be fixed.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.fix_up'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4391"
    "insert": ".fix_up()"
    "name": "fix_up"
    "tag": ".fix_up(self)"
  - "doc": "Returns the alt text for the first file in the list.  If no alt\ntext is defined, None is returned.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.get_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4400"
    "insert": ".get_alt_text()"
    "name": "get_alt_text"
    "tag": ".get_alt_text(self)"
  - "doc": "Returns a list of variables used by the Jinja2 templating of a DOCX template file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.get_docx_variables'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4460"
    "insert": ".get_docx_variables()"
    "name": "get_docx_variables"
    "tag": ".get_docx_variables(self)"
  - "doc": "Returns a list of fields that exist in the PDF document<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.get_pdf_fields'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4465"
    "insert": ".get_pdf_fields()"
    "name": "get_pdf_fields"
    "tag": ".get_pdf_fields(self)"
  - "doc": "Returns True if the first file is a PDF file and it is encrypted, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.is_encrypted'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4420"
    "insert": ".is_encrypted()"
    "name": "is_encrypted"
    "tag": ".is_encrypted(self)"
  - "doc": "Makes the contents of the first file an OCRed PDF of the list of files."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4501"
    "insert": ".make_ocr_pdf()"
    "name": "make_ocr_pdf"
    "tag": ".make_ocr_pdf(self, **kwargs)"
  - "doc": "Makes the contents of the first file an OCRed PDF of the list of files."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4510"
    "insert": ".make_ocr_pdf_in_background()"
    "name": "make_ocr_pdf_in_background"
    "tag": ".make_ocr_pdf_in_background(self, **kwargs)"
  - "doc": "Returns the total number of pages in the PDF documents, or one page per non-PDF file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.num_pages'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4408"
    "insert": ".num_pages()"
    "name": "num_pages"
    "tag": ".num_pages(self)"
  - "doc": "Returns a path and filename at which the first file in the\nlist can be accessed.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.path'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4452"
    "insert": ".path()"
    "name": "path"
    "tag": ".path(self)"
  - "doc": "Allows or disallows access to the file(s) for a given privilege.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.privilege_access'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4487"
    "insert": ".privilege_access()"
    "name": "privilege_access"
    "tag": ".privilege_access(self, *pargs, **kwargs)"
  - "doc": "Sets the alt text of each of the files in the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.set_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4396"
    "insert": ".set_alt_text()"
    "name": "set_alt_text"
    "tag": ".set_alt_text(self, alt_text)"
  - "doc": "Sets attributes of the file(s) stored on the server.  Takes optional keyword arguments private and persistent, which must be boolean values.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.set_attributes'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4475"
    "insert": ".set_attributes()"
    "name": "set_attributes"
    "tag": ".set_attributes(self, **kwargs)"
  - "doc": "Inserts markup that displays each element in the list as an image.\nTakes optional keyword arguments width and alt_text.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.show'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4439"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self, width=None, alt_text=None)"
  - "doc": "Returns the number of bytes in the first file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.size_in_bytes'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4429"
    "insert": ".size_in_bytes()"
    "name": "size_in_bytes"
    "tag": ".size_in_bytes(self)"
  - "doc": "Returns the contents of the first file."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4434"
    "insert": ".slurp()"
    "name": "slurp"
    "tag": ".slurp(self, auto_decode=True)"
  - "doc": "Returns a URL to the first file in the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.url_for'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4470"
    "insert": ".url_for()"
    "name": "url_for"
    "tag": ".url_for(self, **kwargs)"
  - "doc": "Allows or disallows access to the file(s) for a given user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.user_access'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4482"
    "insert": ".user_access()"
    "name": "user_access"
    "tag": ".user_access(self, *pargs, **kwargs)"
  - "doc": "Returns True if the first file is a PDF file and it uses AcroForm, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAFileList.uses_acroform'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4415"
    "insert": ".uses_acroform()"
    "name": "uses_acroform"
    "tag": ".uses_acroform(self)"
  "name": "DAFileList"
"DAGlobal":
  "bases": []
  "doc": "A class for objects that are stored in an unencrypted global area outside of the interview answers."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5322"
  "insert": "DAGlobal"
  "methods":
  - "doc": "Deletes the data in the global storage area and undefines all attributes."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5400"
    "insert": ".delete()"
    "name": "delete"
    "tag": ".delete(self)"
  "name": "DAGlobal"
"DAGoogleAPI":
  "bases": []
  "doc": "The base class for all docassemble objects."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5785"
  "insert": "DAGoogleAPI"
  "methods":
  - "doc": "Returns an OAuth2 credentials object for the given scope."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5787"
    "insert": ".api_credentials()"
    "name": "api_credentials"
    "tag": ".api_credentials(self, scope)"
  - "doc": "Returns a google.oauth2.service_account credentials object for the given scope."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5796"
    "insert": ".cloud_credentials()"
    "name": "cloud_credentials"
    "tag": ".cloud_credentials(self, scope)"
  - "doc": "Returns a Google Drive service object using google-api-python-client."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5793"
    "insert": ".drive_service()"
    "name": "drive_service"
    "tag": ".drive_service(self)"
  - "doc": "Returns a google.cloud.storage.Client object."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5802"
    "insert": ".google_cloud_storage_client()"
    "name": "google_cloud_storage_client"
    "tag": ".google_cloud_storage_client(self)"
  - "doc": "Returns an google.cloud.vision.ImageAnnotatorClient object."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5805"
    "insert": ".google_cloud_vision_client()"
    "name": "google_cloud_vision_client"
    "tag": ".google_cloud_vision_client(self)"
  - "doc": "Returns a credentialized http object for the given scope."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5790"
    "insert": ".http()"
    "name": "http"
    "tag": ".http(self, scope)"
  - "doc": "Returns the ID of the project referenced in the google service account credentials in the Configuration."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5799"
    "insert": ".project_id()"
    "name": "project_id"
    "tag": ".project_id(self)"
  "name": "DAGoogleAPI"
"DALink":
  "bases": []
  "doc": "An object type Represents a hyperlink to a URL."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5245"
  "insert": "DALink"
  "methods":
  - "doc": "In the DOCX context, returns a DOCX hyperlink. Otherwise, returns a Markdown hyperlink.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DALink.show'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5250"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self)"
  "name": "DALink"
"DAList":
  "bases": []
  "doc": "The base class for lists of things."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1330"
  "insert": "DAList"
  "methods":
  - "doc": "Returns HTML for adding an item to a list<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.add_action'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2183"
    "insert": ".add_action()"
    "name": "add_action"
    "tag": ".add_action(self, label=None, message=None, url_only=False, icon='plus-circle', color=None, size='sm', block=None, classname=None)"
  - "doc": "Adds the arguments to the end of the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.append'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1654"
    "insert": ".append()"
    "name": "append"
    "tag": ".append(self, *pargs, **kwargs)"
  - "doc": "Creates a new object and adds it to the list.\nTakes an optional argument, which is the type of object\nthe new object should be.  If no object type is provided,\n...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.appendObject'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1629"
    "insert": ".appendObject()"
    "name": "appendObject"
    "tag": ".appendObject(self, *pargs, **kwargs)"
  - "doc": "Returns a human-readable expression of the object based on its instanceName,\nusing singular or plural depending on whether the list has one element or more\nthan...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.as_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1757"
    "insert": ".as_noun()"
    "name": "as_noun"
    "tag": ".as_noun(self, *pargs, **kwargs)"
  - "doc": "Returns a human-readable expression of the object based on its instanceName,\nwithout making it plural.  E.g., case.plaintiff.child.as_singular_noun()\nreturns &q...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.as_singular_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1736"
    "insert": ".as_singular_noun()"
    "name": "as_singular_noun"
    "tag": ".as_singular_noun(self)"
  - "doc": "Removes all the items from the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.clear'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1558"
    "insert": ".clear()"
    "name": "clear"
    "tag": ".clear(self)"
  - "doc": "Returns the elements of the list, separated by commas, with\n&quot;and&quot; before the last element.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.comma_and_list'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1971"
    "insert": ".comma_and_list()"
    "name": "comma_and_list"
    "tag": ".comma_and_list(self, **kwargs)"
  - "doc": "Returns a list of the elements that are complete.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.complete_elements'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1813"
    "insert": ".complete_elements()"
    "name": "complete_elements"
    "tag": ".complete_elements(self, complete_attribute=None)"
  - "doc": "Returns a copy of the list."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1449"
    "insert": ".copy()"
    "name": "copy"
    "tag": ".copy(self)"
  - "doc": "Returns the number of times item appears in the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.count'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1694"
    "insert": ".count()"
    "name": "count"
    "tag": ".count(self, item)"
  - "doc": "Returns the index number of the last element added to the list, or 0 if no elements have been added.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.current_index'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1804"
    "insert": ".current_index()"
    "name": "current_index"
    "tag": ".current_index(self)"
  - "doc": "Deletes items.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.delitem'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1444"
    "insert": ".delitem()"
    "name": "delitem"
    "tag": ".delitem(self, *pargs)"
  - "doc": "Like does_verb(), except it returns the past tense of the verb.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.did_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1728"
    "insert": ".did_verb()"
    "name": "did_verb"
    "tag": ".did_verb(self, the_verb, **kwargs)"
  - "doc": "Returns a Python set consisting of the elements of the current list,\nconsidered as a set, that do not exist in the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.difference'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2066"
    "insert": ".difference()"
    "name": "difference"
    "tag": ".difference(self, other_set)"
  - "doc": "Returns the appropriate conjugation of the given verb depending on whether\nthere is only one element in the list or multiple elements.  E.g.,\ncase.plaintiff.doe...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.does_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1711"
    "insert": ".does_verb()"
    "name": "does_verb"
    "tag": ".does_verb(self, the_verb, **kwargs)"
  - "doc": "Adds each of the elements of the given list to the end of the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.extend'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1698"
    "insert": ".extend()"
    "name": "extend"
    "tag": ".extend(self, the_list)"
  - "doc": "Returns a filtered version of the list containing only items with particular values of attributes.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.filter'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1452"
    "insert": ".filter()"
    "name": "filter"
    "tag": ".filter(self, *pargs, **kwargs)"
  - "doc": "Returns the first element of the list<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.first'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1701"
    "insert": ".first()"
    "name": "first"
    "tag": ".first(self)"
  - "doc": "Substitutes a different instance name for the object and its subobjects."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1576"
    "insert": ".fix_instance_name()"
    "name": "fix_instance_name"
    "tag": ".fix_instance_name(self, old_instance_name, new_instance_name)"
  - "doc": "Causes the elements of the list to be gathered and named.  Returns True.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1878"
    "insert": ".gather()"
    "name": "gather"
    "tag": ".gather(self, number=None, item_object_type=None, minimum=None, complete_attribute=None)"
  - "doc": "Ensures all items in the list are complete and then returns True.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.gathered_and_complete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1419"
    "insert": ".gathered_and_complete()"
    "name": "gathered_and_complete"
    "tag": ".gathered_and_complete(self)"
  - "doc": "Returns True if the gathering process has started or the number of elements is non-zero."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1794"
    "insert": ".gathering_started()"
    "name": "gathering_started"
    "tag": ".gathering_started(self)"
  - "doc": "Returns whether the list has been gathered<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.has_been_gathered'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1509"
    "insert": ".has_been_gathered()"
    "name": "has_been_gathered"
    "tag": ".has_been_gathered(self)"
  - "doc": "Code that runs just after a list is marked as gathered.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.hook_after_gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2227"
    "insert": ".hook_after_gather()"
    "name": "hook_after_gather"
    "tag": ".hook_after_gather(self, *pargs, **kwargs)"
  - "doc": "Code that runs just before a list is marked as gathered.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.hook_on_gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2224"
    "insert": ".hook_on_gather()"
    "name": "hook_on_gather"
    "tag": ".hook_on_gather(self, *pargs, **kwargs)"
  - "doc": "Code that runs when an item is marked as complete.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.hook_on_item_complete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2230"
    "insert": ".hook_on_item_complete()"
    "name": "hook_on_item_complete"
    "tag": ".hook_on_item_complete(self, item, *pargs, **kwargs)"
  - "doc": "Code that runs when an item is removed from the list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.hook_on_remove'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2233"
    "insert": ".hook_on_remove()"
    "name": "hook_on_remove"
    "tag": ".hook_on_remove(self, item, *pargs, **kwargs)"
  - "doc": "Returns the first index at which a given item may be found.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.index'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1554"
    "insert": ".index()"
    "name": "index"
    "tag": ".index(self, *pargs, **kwargs)"
  - "doc": "Creates a new object and creates an entry in the list for it.\nThe first argument is the index to set.\nTakes an optional second argument, which is the type of ob...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.initializeObject'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1377"
    "insert": ".initializeObject()"
    "name": "initializeObject"
    "tag": ".initializeObject(self, *pargs, **kwargs)"
  - "doc": "Inserts an item at the given position.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.insert'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1689"
    "insert": ".insert()"
    "name": "insert"
    "tag": ".insert(self, *pargs)"
  - "doc": "Returns a Python set consisting of the elements of the current list,\nconsidered as a set, that also exist in the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.intersection'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2059"
    "insert": ".intersection()"
    "name": "intersection"
    "tag": ".intersection(self, other_set)"
  - "doc": "Returns True if no elements overlap between the current list,\nconsidered as a set, and the other_set.  Otherwise, returns\nFalse.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.isdisjoint'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2073"
    "insert": ".isdisjoint()"
    "name": "isdisjoint"
    "tag": ".isdisjoint(self, other_set)"
  - "doc": "Returns True if the current list, considered as a set, is a subset\nof the other_set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.issubset'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2081"
    "insert": ".issubset()"
    "name": "issubset"
    "tag": ".issubset(self, other_set)"
  - "doc": "Returns True if the other_set is a subset of the current list,\nconsidered as a set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.issuperset'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2088"
    "insert": ".issuperset()"
    "name": "issuperset"
    "tag": ".issuperset(self, other_set)"
  - "doc": "Returns the value for the given index, or a blank value if the index does not exist.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.item'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1528"
    "insert": ".item()"
    "name": "item"
    "tag": ".item(self, index)"
  - "doc": "Returns HTML for editing the items in a list<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.item_actions'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2135"
    "insert": ".item_actions()"
    "name": "item_actions"
    "tag": ".item_actions(self, *pargs, **kwargs)"
  - "doc": "Returns a variable name for an item, suitable for use in force_ask() and other functions.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.item_name'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1441"
    "insert": ".item_name()"
    "name": "item_name"
    "tag": ".item_name(self, item)"
  - "doc": "Returns the last element of the list<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.last'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1705"
    "insert": ".last()"
    "name": "last"
    "tag": ".last(self)"
  - "doc": "Returns the number of elements in the list.  Forces the gathering of the\nelements if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.number'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1787"
    "insert": ".number()"
    "name": "number"
    "tag": ".number(self)"
  - "doc": "Returns the number of elements in the list, spelling out the number if ten\nor below.  Forces the gathering of the elements if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.number_as_word'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1809"
    "insert": ".number_as_word()"
    "name": "number_as_word"
    "tag": ".number_as_word(self, language=None, capitalize=False)"
  - "doc": "Returns the number of elements in the list that have been gathered so far."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1799"
    "insert": ".number_gathered()"
    "name": "number_gathered"
    "tag": ".number_gathered(self, if_started=False)"
  - "doc": "Remove an item the list and return it.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.pop'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1516"
    "insert": ".pop()"
    "name": "pop"
    "tag": ".pop(self, *pargs)"
  - "doc": "If the variable name is &quot;plaintiff&quot; and the target is &quot;fish,&quot;\nreturns &quot;plaintiff's fish&quot; if there is one item in the list,\nand &qu...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1743"
    "insert": ".possessive()"
    "name": "possessive"
    "tag": ".possessive(self, target, **kwargs)"
  - "doc": "Returns a pronoun like &quot;you,&quot; &quot;her,&quot; or &quot;him,&quot; &quot;it&quot;, or &quot;them,&quot; as appropriate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.pronoun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2104"
    "insert": ".pronoun()"
    "name": "pronoun"
    "tag": ".pronoun(self, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.pronoun_objective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2113"
    "insert": ".pronoun_objective()"
    "name": "pronoun_objective"
    "tag": ".pronoun_objective(self, **kwargs)"
  - "doc": "Given a word like &quot;fish,&quot; returns &quot;her fish,&quot; &quot;his fish,&quot; or &quot;their fish,&quot; as appropriate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.pronoun_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2095"
    "insert": ".pronoun_possessive()"
    "name": "pronoun_possessive"
    "tag": ".pronoun_possessive(self, target, **kwargs)"
  - "doc": "Returns a pronoun like &quot;you,&quot; &quot;she,&quot; &quot;he,&quot; or &quot;they&quot; as appropriate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.pronoun_subjective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2116"
    "insert": ".pronoun_subjective()"
    "name": "pronoun_subjective"
    "tag": ".pronoun_subjective(self, **kwargs)"
  - "doc": "Returns the output of the quantity_noun() function using the number\nof elements in the list as the quantity.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.quantity_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1752"
    "insert": ".quantity_noun()"
    "name": "quantity_noun"
    "tag": ".quantity_noun(self, *pargs, **kwargs)"
  - "doc": "Removes the given arguments from the list, if they are in the list<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.remove'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1665"
    "insert": ".remove()"
    "name": "remove"
    "tag": ".remove(self, *pargs)"
  - "doc": "Indicates that there is more to be gathered<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.reset_gathered'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1482"
    "insert": ".reset_gathered()"
    "name": "reset_gathered"
    "tag": ".reset_gathered(self, recursive=False, only_if_empty=False, mark_incomplete=False)"
  - "doc": "Reverse the order of the elements of the list in place and returns the object.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.reverse'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1614"
    "insert": ".reverse()"
    "name": "reverse"
    "tag": ".reverse(self, *pargs, **kwargs)"
  - "doc": "Sets the object_type of the DAList<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.set_object_type'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1411"
    "insert": ".set_object_type()"
    "name": "set_object_type"
    "tag": ".set_object_type(self, object_type)"
  - "doc": "Reorders the elements of the list in place and returns the object.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.sort'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1607"
    "insert": ".sort()"
    "name": "sort"
    "tag": ".sort(self, *pargs, **kwargs)"
  - "doc": "Reorders the elements of the list and returns the object, without\ntriggering the gathering process.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.sort_elements'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1621"
    "insert": ".sort_elements()"
    "name": "sort_elements"
    "tag": ".sort_elements(self, *pargs, **kwargs)"
  - "doc": "Returns a Python set consisting of the elements of current list,\nconsidered as a set, combined with the elements of the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAList.union'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L2052"
    "insert": ".union()"
    "name": "union"
    "tag": ".union(self, other_set)"
  "name": "DAList"
"DAOAuth":
  "bases": []
  "doc": "A base class for performing OAuth2 authorization in an interview"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8599"
  "insert": "DAOAuth"
  "methods":
  - "doc": "Returns True if user has stored credentials, whether they are valid or not.  Otherwise returns False."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8718"
    "insert": ".active()"
    "name": "active"
    "tag": ".active(self)"
  - "doc": "Adds the appropriate headers to a DAWeb object"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8707"
    "insert": ".authorize()"
    "name": "authorize"
    "tag": ".authorize(self, web)"
  - "doc": "Deletes the stored credentials."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8697"
    "insert": ".delete_credentials()"
    "name": "delete_credentials"
    "tag": ".delete_credentials(self)"
  - "doc": "If the credentials are not valid, starts the authorization process."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8715"
    "insert": ".ensure_authorized()"
    "name": "ensure_authorized"
    "tag": ".ensure_authorized(self)"
  - "doc": "Returns the stored credentials."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8660"
    "insert": ".get_credentials()"
    "name": "get_credentials"
    "tag": ".get_credentials(self)"
  - "doc": "Returns an http object that can be used to communicate with the OAuth-enabled API."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8704"
    "insert": ".get_http()"
    "name": "get_http"
    "tag": ".get_http(self)"
  - "doc": "Returns True if user has stored credentials and the credentials are valid."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8726"
    "insert": ".is_authorized()"
    "name": "is_authorized"
    "tag": ".is_authorized(self)"
  "name": "DAOAuth"
"DAObject":
  "bases":
  - "object"
  "doc": "The base class for all docassemble objects."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L522"
  "insert": "DAObject"
  "methods":
  - "doc": "Returns a particular value depending on the value of a given attribute"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L928"
    "insert": ".alternative()"
    "name": "alternative"
    "tag": ".alternative(self, *pargs, **kwargs)"
  - "doc": "Returns a serializable representation of the object.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.as_serializable'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L851"
    "insert": ".as_serializable()"
    "name": "as_serializable"
    "tag": ".as_serializable(self)"
  - "doc": "Returns the value of the given attribute, or None if the attribute is not defined<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.attr'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L908"
    "insert": ".attr()"
    "name": "attr"
    "tag": ".attr(self, name)"
  - "doc": "Returns a variable name for an attribute, suitable for use in force_ask() and other functions.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.attr_name'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L599"
    "insert": ".attr_name()"
    "name": "attr_name"
    "tag": ".attr_name(self, attr)"
  - "doc": "Returns True or False depending on whether the given attribute is defined.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.attribute_defined'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L905"
    "insert": ".attribute_defined()"
    "name": "attribute_defined"
    "tag": ".attribute_defined(self, name)"
  - "doc": "Returns a copy of the object, giving the new object the intrinsic name 'thename'; also changes the intrinsic names of sub-objects<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.copy_deep'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L805"
    "insert": ".copy_deep()"
    "name": "copy_deep"
    "tag": ".copy_deep(self, thename)"
  - "doc": "Returns a copy of the object, giving the new object the intrinsic name 'thename'; does not change intrinsic names of sub-objects<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.copy_shallow'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L800"
    "insert": ".copy_shallow()"
    "name": "copy_shallow"
    "tag": ".copy_shallow(self, thename)"
  - "doc": "Deletes attributes.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.delattr'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L602"
    "insert": ".delattr()"
    "name": "delattr"
    "tag": ".delattr(self, *pargs)"
  - "doc": "Substitutes a different instance name for the object and its subobjects."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L782"
    "insert": ".fix_instance_name()"
    "name": "fix_instance_name"
    "tag": ".fix_instance_name(self, old_instance_name, new_instance_name)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L711"
    "insert": ".get_peer_relation()"
    "name": "get_peer_relation"
    "tag": ".get_peer_relation(self, relationship_type, tree, create=False, object_type=None, complete_attribute=None, rel_filter_by=None, filter_by=None, count=1)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L648"
    "insert": ".get_relation()"
    "name": "get_relation"
    "tag": ".get_relation(self, relationship_type, tree, self_is='either', create=False, object_type=None, complete_attribute=None, rel_filter_by=None, filter_by=None, count=1)"
  - "doc": "Compute a fresh value of the given attr and return it.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.getattr_fresh'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L612"
    "insert": ".getattr_fresh()"
    "name": "getattr_fresh"
    "tag": ".getattr_fresh(self, attr)"
  - "doc": "Defines an attribute for the object, setting it to a newly initialized object.\nThe first argument is the name of the attribute and the second argument is type\no...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.initializeAttribute'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L861"
    "insert": ".initializeAttribute()"
    "name": "initializeAttribute"
    "tag": ".initializeAttribute(self, *pargs, **kwargs)"
  - "doc": "Invalidate attributes.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.invalidate_attr'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L607"
    "insert": ".invalidate_attr()"
    "name": "invalidate_attr"
    "tag": ".invalidate_attr(self, *pargs)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L617"
    "insert": ".is_peer_relation()"
    "name": "is_peer_relation"
    "tag": ".is_peer_relation(self, target, relationship_type, tree)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L621"
    "insert": ".is_relation()"
    "name": "is_relation"
    "tag": ".is_relation(self, target, relationship_type, tree, self_is='either', filter_by=None)"
  - "doc": "Returns the instanceName attribute, or, if the instanceName contains attributes, returns a\nphrase.  E.g., case.plaintiff becomes &quot;plaintiff in the case.&qu...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.object_name'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L844"
    "insert": ".object_name()"
    "name": "object_name"
    "tag": ".object_name(self, **kwargs)"
  - "doc": "Returns a possessive phrase based on the instanceName.  E.g., client.object_possessive('fish') returns\n&quot;client's fish.&quot; <br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.object_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L854"
    "insert": ".object_possessive()"
    "name": "object_possessive"
    "tag": ".object_possessive(self, target, **kwargs)"
  - "doc": "Returns it.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.pronoun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L925"
    "insert": ".pronoun()"
    "name": "pronoun"
    "tag": ".pronoun(self, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.pronoun_objective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L941"
    "insert": ".pronoun_objective()"
    "name": "pronoun_objective"
    "tag": ".pronoun_objective(self, **kwargs)"
  - "doc": "Returns &quot;its &lt;target&gt;.&quot; <br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.pronoun_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L919"
    "insert": ".pronoun_possessive()"
    "name": "pronoun_possessive"
    "tag": ".pronoun_possessive(self, target, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.pronoun_subjective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L944"
    "insert": ".pronoun_subjective()"
    "name": "pronoun_subjective"
    "tag": ".pronoun_subjective(self, **kwargs)"
  - "doc": "Redefines an attribute for the object, setting it to a newly initialized object.\nThe first argument is the name of the attribute and the second argument is type...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAObject.reInitializeAttribute'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L884"
    "insert": ".reInitializeAttribute()"
    "name": "reInitializeAttribute"
    "tag": ".reInitializeAttribute(self, *pargs, **kwargs)"
  - "doc": "Sets the instanceName attribute, if it is not already set."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L789"
    "insert": ".set_instance_name()"
    "name": "set_instance_name"
    "tag": ".set_instance_name(self, thename)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L758"
    "insert": ".set_peer_relationship()"
    "name": "set_peer_relationship"
    "tag": ".set_peer_relationship(self, target, relationship_type, tree, replace=False)"
  - "doc": "Sets the instanceName attribute to a random value."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L796"
    "insert": ".set_random_instance_name()"
    "name": "set_random_instance_name"
    "tag": ".set_random_instance_name(self)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L766"
    "insert": ".set_relationship()"
    "name": "set_relationship"
    "tag": ".set_relationship(self, target, relationship_type, self_is, tree, replace=False)"
  "name": "DAObject"
"DAOrderedDict":
  "bases":
  - "DADict"
  "doc": "A base class for objects that behave like Python OrderedDicts."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3110"
  "insert": "DAOrderedDict"
  "methods": []
  "name": "DAOrderedDict"
"DARedis":
  "bases": []
  "doc": "A class used to interact with the redis server."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5709"
  "insert": "DARedis"
  "methods":
  - "doc": "Returns data from Redis and unpickles it.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DARedis.get_data'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5715"
    "insert": ".get_data()"
    "name": "get_data"
    "tag": ".get_data(self, key)"
  - "doc": "Returns a key that combines the interview name with the keyname.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DARedis.key'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5712"
    "insert": ".key()"
    "name": "key"
    "tag": ".key(self, keyname)"
  - "doc": "Saves data in Redis after pickling it.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DARedis.set_data'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5726"
    "insert": ".set_data()"
    "name": "set_data"
    "tag": ".set_data(self, key, data, expire=None)"
  "name": "DARedis"
"DASet":
  "bases": []
  "doc": "A base class for objects that behave like Python sets."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3131"
  "insert": "DASet"
  "methods":
  - "doc": "Adds the arguments to the set, unpacking each argument if it is a\ngroup of some sort (i.e. it is iterable).<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.add'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3276"
    "insert": ".add()"
    "name": "add"
    "tag": ".add(self, *pargs)"
  - "doc": "Returns a human-readable expression of the object based on its\ninstanceName, using singular or plural depending on whether\nthe set has one item in it or multipl...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.as_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3333"
    "insert": ".as_noun()"
    "name": "as_noun"
    "tag": ".as_noun(self, *pargs, **kwargs)"
  - "doc": "Returns a human-readable expression of the object based on its\ninstanceName, without making it plural.  E.g.,\nplayer.as_singular_noun() returns &quot;player&quo...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.as_singular_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3318"
    "insert": ".as_singular_noun()"
    "name": "as_singular_noun"
    "tag": ".as_singular_noun(self)"
  - "doc": "Removes all the items from the set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.clear'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3254"
    "insert": ".clear()"
    "name": "clear"
    "tag": ".clear(self)"
  - "doc": "Returns the items in the set, separated by commas, with\n&quot;and&quot; before the last item.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.comma_and_list'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3437"
    "insert": ".comma_and_list()"
    "name": "comma_and_list"
    "tag": ".comma_and_list(self, **kwargs)"
  - "doc": "Returns a subset with the elements that are complete.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.complete_elements'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3167"
    "insert": ".complete_elements()"
    "name": "complete_elements"
    "tag": ".complete_elements(self, complete_attribute=None)"
  - "doc": "Returns a copy of the set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.copy'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3251"
    "insert": ".copy()"
    "name": "copy"
    "tag": ".copy(self)"
  - "doc": "Like does_verb(), except it returns the past tense of the verb.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.did_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3310"
    "insert": ".did_verb()"
    "name": "did_verb"
    "tag": ".did_verb(self, the_verb, **kwargs)"
  - "doc": "Returns a Python set consisting of the elements of the current set\nthat do not exist in the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.difference'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3518"
    "insert": ".difference()"
    "name": "difference"
    "tag": ".difference(self, other_set)"
  - "doc": "Removes an element from the set if it exists.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.discard'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3264"
    "insert": ".discard()"
    "name": "discard"
    "tag": ".discard(self, elem)"
  - "doc": "Returns the appropriate conjugation of the given verb depending on\nwhether there is only one element in the set or multiple\nitems.  E.g., player.does_verb('fini...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.does_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3290"
    "insert": ".does_verb()"
    "name": "does_verb"
    "tag": ".does_verb(self, the_verb, **kwargs)"
  - "doc": "Returns a filtered version of the set containing only items with particular values of attributes.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.filter'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3190"
    "insert": ".filter()"
    "name": "filter"
    "tag": ".filter(self, *pargs, **kwargs)"
  - "doc": "Causes the items in the set to be gathered.  Returns True.\n\n        <br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3391"
    "insert": ".gather()"
    "name": "gather"
    "tag": ".gather(self, number=None, minimum=None)"
  - "doc": "Ensures all items in the set are complete and then returns True.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.gathered_and_complete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3145"
    "insert": ".gathered_and_complete()"
    "name": "gathered_and_complete"
    "tag": ".gathered_and_complete(self)"
  - "doc": "Returns True if the gathering process has started or the number of elements is non-zero."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3375"
    "insert": ".gathering_started()"
    "name": "gathering_started"
    "tag": ".gathering_started(self)"
  - "doc": "Returns whether the set has been gathered<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.has_been_gathered'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3244"
    "insert": ".has_been_gathered()"
    "name": "has_been_gathered"
    "tag": ".has_been_gathered(self)"
  - "doc": "Code that runs just after a set is marked as gathered.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.hook_after_gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3568"
    "insert": ".hook_after_gather()"
    "name": "hook_after_gather"
    "tag": ".hook_after_gather(self, *pargs, **kwargs)"
  - "doc": "Code that runs just before a set is marked as gathered.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.hook_on_gather'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3565"
    "insert": ".hook_on_gather()"
    "name": "hook_on_gather"
    "tag": ".hook_on_gather(self, *pargs, **kwargs)"
  - "doc": "Code that runs when an item is marked as complete.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.hook_on_item_complete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3571"
    "insert": ".hook_on_item_complete()"
    "name": "hook_on_item_complete"
    "tag": ".hook_on_item_complete(self, item, *pargs, **kwargs)"
  - "doc": "Code that runs when an item is removed from the set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.hook_on_remove'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3574"
    "insert": ".hook_on_remove()"
    "name": "hook_on_remove"
    "tag": ".hook_on_remove(self, item, *pargs, **kwargs)"
  - "doc": "Returns a Python set consisting of the elements of the current set\nthat also exist in the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.intersection'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3511"
    "insert": ".intersection()"
    "name": "intersection"
    "tag": ".intersection(self, other_set)"
  - "doc": "Returns True if no elements overlap between the current set and the\nother_set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.isdisjoint'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3525"
    "insert": ".isdisjoint()"
    "name": "isdisjoint"
    "tag": ".isdisjoint(self, other_set)"
  - "doc": "Returns True if the current set is a subset of the other_set.\nOtherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.issubset'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3530"
    "insert": ".issubset()"
    "name": "issubset"
    "tag": ".issubset(self, other_set)"
  - "doc": "Returns True if the other_set is a subset of the current set.\nOtherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.issuperset'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3537"
    "insert": ".issuperset()"
    "name": "issuperset"
    "tag": ".issuperset(self, other_set)"
  - "doc": "Returns the number of items in the set.  Forces the gathering of\nthe items if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.number'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3366"
    "insert": ".number()"
    "name": "number"
    "tag": ".number(self)"
  - "doc": "Returns the number of items in the set, spelling out the number if\nten or below.  Forces the gathering of the items if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.number_as_word'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3385"
    "insert": ".number_as_word()"
    "name": "number_as_word"
    "tag": ".number_as_word(self, language=None)"
  - "doc": "Returns the number of elements in the list that have been gathered so far."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3380"
    "insert": ".number_gathered()"
    "name": "number_gathered"
    "tag": ".number_gathered(self, if_started=False)"
  - "doc": "Remove and return an arbitrary element from the set<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.pop'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3271"
    "insert": ".pop()"
    "name": "pop"
    "tag": ".pop(self)"
  - "doc": "Returns them, or the pronoun for the one element.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.pronoun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3550"
    "insert": ".pronoun()"
    "name": "pronoun"
    "tag": ".pronoun(self, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.pronoun_objective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3559"
    "insert": ".pronoun_objective()"
    "name": "pronoun_objective"
    "tag": ".pronoun_objective(self, **kwargs)"
  - "doc": "Returns &quot;their &lt;target&gt;.&quot; <br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.pronoun_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3544"
    "insert": ".pronoun_possessive()"
    "name": "pronoun_possessive"
    "tag": ".pronoun_possessive(self, target, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.pronoun_subjective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3562"
    "insert": ".pronoun_subjective()"
    "name": "pronoun_subjective"
    "tag": ".pronoun_subjective(self, **kwargs)"
  - "doc": "Returns the output of the quantity_noun() function using the number\nof elements in the set as the quantity.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.quantity_noun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3328"
    "insert": ".quantity_noun()"
    "name": "quantity_noun"
    "tag": ".quantity_noun(self, *pargs, **kwargs)"
  - "doc": "Removes an element from the set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.remove'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3257"
    "insert": ".remove()"
    "name": "remove"
    "tag": ".remove(self, elem)"
  - "doc": "Indicates that there is more to be gathered<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.reset_gathered'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3219"
    "insert": ".reset_gathered()"
    "name": "reset_gathered"
    "tag": ".reset_gathered(self, recursive=False, only_if_empty=False, mark_incomplete=False)"
  - "doc": "Returns a Python set consisting of the elements of current set\ncombined with the elements of the other_set.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DASet.union'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L3504"
    "insert": ".union()"
    "name": "union"
    "tag": ".union(self, other_set)"
  "name": "DASet"
"DAStaticFile":
  "bases": []
  "doc": "The base class for all docassemble objects."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4518"
  "insert": "DAStaticFile"
  "methods":
  - "doc": "Returns the alt text for the file.  If no alt text is defined, None\nis returned.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.get_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4525"
    "insert": ".get_alt_text()"
    "name": "get_alt_text"
    "tag": ".get_alt_text(self)"
  - "doc": "Returns a list of variables used by the Jinja2 templating of a DOCX template file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.get_docx_variables'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4604"
    "insert": ".get_docx_variables()"
    "name": "get_docx_variables"
    "tag": ".get_docx_variables(self)"
  - "doc": "Returns a list of fields that exist in the PDF document<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.get_pdf_fields'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4607"
    "insert": ".get_pdf_fields()"
    "name": "get_pdf_fields"
    "tag": ".get_pdf_fields(self)"
  - "doc": "Returns True if the file is a PDF file and it is encrypted, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.is_encrypted'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4579"
    "insert": ".is_encrypted()"
    "name": "is_encrypted"
    "tag": ".is_encrypted(self)"
  - "doc": "Returns a path and filename at which the file can be accessed.\n\n        <br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.path'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4598"
    "insert": ".path()"
    "name": "path"
    "tag": ".path(self)"
  - "doc": "Sets the alt text for the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.set_alt_text'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4533"
    "insert": ".set_alt_text()"
    "name": "set_alt_text"
    "tag": ".set_alt_text(self, alt_text)"
  - "doc": "Inserts markup that displays the file.  Takes optional keyword\narguments width and alt_text.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.show'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4544"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self, width=None, alt_text=None)"
  - "doc": "Returns the number of bytes in the file."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4583"
    "insert": ".size_in_bytes()"
    "name": "size_in_bytes"
    "tag": ".size_in_bytes(self)"
  - "doc": "Returns the contents of the file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.slurp'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4587"
    "insert": ".slurp()"
    "name": "slurp"
    "tag": ".slurp(self, auto_decode=True)"
  - "doc": "Returns a URL to the static file.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.url_for'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4619"
    "insert": ".url_for()"
    "name": "url_for"
    "tag": ".url_for(self, **kwargs)"
  - "doc": "Returns True if the file is a PDF file and it uses AcroForm, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStaticFile.uses_acroform'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4575"
    "insert": ".uses_acroform()"
    "name": "uses_acroform"
    "tag": ".uses_acroform(self)"
  "name": "DAStaticFile"
"DAStore":
  "bases": []
  "doc": "A class used to save objects to SQL."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5410"
  "insert": "DAStore"
  "methods":
  - "doc": "Returns True if the key exists in the data store, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStore.defined'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5440"
    "insert": ".defined()"
    "name": "defined"
    "tag": ".defined(self, key)"
  - "doc": "Deletes an object from the data store<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStore.delete'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5452"
    "insert": ".delete()"
    "name": "delete"
    "tag": ".delete(self, key)"
  - "doc": "Reads an object from the data store for the given key.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStore.get'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5444"
    "insert": ".get()"
    "name": "get"
    "tag": ".get(self, key)"
  - "doc": "Returns True if the storage object is using encryption, otherwise returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStore.is_encrypted'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5413"
    "insert": ".is_encrypted()"
    "name": "is_encrypted"
    "tag": ".is_encrypted(self)"
  - "doc": "Returns a list of keys in use."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5456"
    "insert": ".keys()"
    "name": "keys"
    "tag": ".keys(self)"
  - "doc": "Writes an object to the data store under the given key.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DAStore.set'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5448"
    "insert": ".set()"
    "name": "set"
    "tag": ".set(self, key, the_value)"
  "name": "DAStore"
"DATemplate":
  "bases": []
  "doc": "The class used for Markdown templates.  A template block saves to\nan object of this type.  The two attributes are &quot;subject&quot; and\n&quot;content.&quot; "
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4703"
  "insert": "DATemplate"
  "methods":
  - "doc": "Displays the contents of the template.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#DATemplate.show'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4722"
    "insert": ".show()"
    "name": "show"
    "tag": ".show(self, **kwargs)"
  - "doc": "Displays the contents of the template."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L4725"
    "insert": ".show_as_markdown()"
    "name": "show_as_markdown"
    "tag": ".show_as_markdown(self, **kwargs)"
  "name": "DATemplate"
"DAValidationError":
  "bases":
  - "Exception"
  "doc": "This is an Exception object that is used when raising an exception inside input validation code."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/error.py#L22"
  "insert": "DAValidationError"
  "methods": []
  "name": "DAValidationError"
"DAWeb":
  "bases": []
  "doc": "A class used to call external APIs"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5459"
  "insert": "DAWeb"
  "methods":
  - "doc": "Makes a DELETE request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5700"
    "insert": ".delete()"
    "name": "delete"
    "tag": ".delete(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None)"
  - "doc": "Makes a GET request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5688"
    "insert": ".get()"
    "name": "get"
    "tag": ".get(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None)"
  - "doc": "Makes a HEAD request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5706"
    "insert": ".head()"
    "name": "head"
    "tag": ".head(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None)"
  - "doc": "Makes an OPTIONS request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5703"
    "insert": ".options()"
    "name": "options"
    "tag": ".options(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None)"
  - "doc": "Makes a PATCH request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5697"
    "insert": ".patch()"
    "name": "patch"
    "tag": ".patch(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None, files=None)"
  - "doc": "Makes a POST request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5691"
    "insert": ".post()"
    "name": "post"
    "tag": ".post(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None, files=None)"
  - "doc": "Makes a PUT request"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5694"
    "insert": ".put()"
    "name": "put"
    "tag": ".put(self, url, data=None, params=None, headers=None, json_body=None, on_failure=None, on_success=None, auth=None, cookies=None, task=None, task_persistent=None, files=None)"
  "name": "DAWeb"
"DAWebError":
  "bases":
  - "Exception"
  "doc": "Common base class for all non-exit exceptions."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/error.py#L288"
  "insert": "DAWebError"
  "methods": []
  "name": "DAWebError"
"Document":
  "bases": []
  "doc": "This is a base class for different types of documents."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L473"
  "insert": "Document"
  "methods": []
  "name": "Document"
"Event":
  "bases": []
  "doc": "A DAObject with pre-set attributes address, which is a City, and\nlocation, which is a LatitudeLongitude."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6832"
  "insert": "Event"
  "methods": []
  "name": "Event"
"Expense":
  "bases":
  - "PeriodicFinancialList"
  "doc": "A PeriodicFinancialList representing a person's expenses."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7269"
  "insert": "Expense"
  "methods": []
  "name": "Expense"
"FinancialList":
  "bases":
  - "DADict"
  "doc": "Represents a set of currency amounts."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7214"
  "insert": "FinancialList"
  "methods":
  - "doc": "Returns a list of types of amounts that exist within the financial list.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#FinancialList.existing_items'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7229"
    "insert": ".existing_items()"
    "name": "existing_items"
    "tag": ".existing_items(self)"
  - "doc": "Returns the total value in the list, gathering the list items if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#FinancialList.total'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7221"
    "insert": ".total()"
    "name": "total"
    "tag": ".total(self)"
  "name": "FinancialList"
"Income":
  "bases":
  - "PeriodicFinancialList"
  "doc": "A PeriodicFinancialList representing a person's income."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7263"
  "insert": "Income"
  "methods": []
  "name": "Income"
"Individual":
  "bases":
  - "Person"
  "doc": "Represents a natural person."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7036"
  "insert": "Individual"
  "methods":
  - "doc": "Returns the individual's age in years, based on self.birthdate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.age_in_years'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7074"
    "insert": ".age_in_years()"
    "name": "age_in_years"
    "tag": ".age_in_years(self, decimals=False, as_of=None)"
  - "doc": "Returns the individual's familiar name."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7056"
    "insert": ".familiar()"
    "name": "familiar"
    "tag": ".familiar(self)"
  - "doc": "If the individual is the user and the user is logged in and\nthe user has set up a name in the user profile, this returns\nthe user's first name.  Otherwise, retu...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.first_name_hint'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7089"
    "insert": ".first_name_hint()"
    "name": "first_name_hint"
    "tag": ".first_name_hint(self)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7067"
    "insert": ".gather_family()"
    "name": "gather_family"
    "tag": ".gather_family(self, tree, up=1, down=1)"
  - "doc": "Returns True if the individual's name has been set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.identified'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7069"
    "insert": ".identified()"
    "name": "identified"
    "tag": ".identified(self)"
  - "doc": "If the individual is the user and the user is logged in and\nthe user has set up a name in the user profile, this returns\nthe user's last name.  Otherwise, retur...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.last_name_hint'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7096"
    "insert": ".last_name_hint()"
    "name": "last_name_hint"
    "tag": ".last_name_hint(self)"
  - "doc": "Returns a pronoun like &quot;you,&quot; &quot;her,&quot; or &quot;him,&quot; as appropriate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.pronoun'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7119"
    "insert": ".pronoun()"
    "name": "pronoun"
    "tag": ".pronoun(self, **kwargs)"
  - "doc": "Same as pronoun().<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.pronoun_objective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7132"
    "insert": ".pronoun_objective()"
    "name": "pronoun_objective"
    "tag": ".pronoun_objective(self, **kwargs)"
  - "doc": "Given a word like &quot;fish,&quot; returns &quot;her fish&quot; or &quot;his fish,&quot; as appropriate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.pronoun_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7106"
    "insert": ".pronoun_possessive()"
    "name": "pronoun_possessive"
    "tag": ".pronoun_possessive(self, target, **kwargs)"
  - "doc": "Returns a pronoun like &quot;you,&quot; &quot;she,&quot; or &quot;he,&quot; as appropriate.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.pronoun_subjective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7135"
    "insert": ".pronoun_subjective()"
    "name": "pronoun_subjective"
    "tag": ".pronoun_subjective(self, **kwargs)"
  - "doc": "Returns &quot;Mr.&quot;, &quot;Ms.&quot;, etc.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.salutation'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7103"
    "insert": ".salutation()"
    "name": "salutation"
    "tag": ".salutation(self, **kwargs)"
  - "doc": "Returns a &quot;yourself&quot; if the individual is the user, otherwise\nreturns the individual's name.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Individual.yourself_or_name'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7148"
    "insert": ".yourself_or_name()"
    "name": "yourself_or_name"
    "tag": ".yourself_or_name(self, **kwargs)"
  "name": "Individual"
"IndividualName":
  "bases":
  - "Name"
  "doc": "The name of an Individual."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6384"
  "insert": "IndividualName"
  "methods":
  - "doc": "Returns True if the name has been defined.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#IndividualName.defined'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6391"
    "insert": ".defined()"
    "name": "defined"
    "tag": ".defined(self)"
  - "doc": "Returns the familiar name."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6396"
    "insert": ".familiar()"
    "name": "familiar"
    "tag": ".familiar(self)"
  - "doc": "Returns the first name followed by the last name.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#IndividualName.firstlast'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6426"
    "insert": ".firstlast()"
    "name": "firstlast"
    "tag": ".firstlast(self)"
  - "doc": "Returns the full name.  Has optional keyword arguments middle\nand use_suffix.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#IndividualName.full'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6401"
    "insert": ".full()"
    "name": "full"
    "tag": ".full(self, middle='initial', use_suffix=True)"
  - "doc": "Returns the last name followed by a comma, followed by the\nlast name, followed by the suffix (if a suffix exists).<br><a target='_blank' href='https://docassemble.org/docs/objects.html#IndividualName.lastfirst'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6431"
    "insert": ".lastfirst()"
    "name": "lastfirst"
    "tag": ".lastfirst(self)"
  - "doc": "Returns the middle initial, or the empty string if the name does not have a middle component."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6445"
    "insert": ".middle_initial()"
    "name": "middle_initial"
    "tag": ".middle_initial(self, with_period=True)"
  "name": "IndividualName"
"LatitudeLongitude":
  "bases": []
  "doc": "Represents a GPS location."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6275"
  "insert": "LatitudeLongitude"
  "methods":
  - "doc": "Returns True or False depending on whether an attempt has yet been made\nto gather the latitude and longitude.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#LatitudeLongitude.status'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6283"
    "insert": ".status()"
    "name": "status"
    "tag": ".status(self)"
  "name": "LatitudeLongitude"
"LegalFiling":
  "bases":
  - "Document"
  "doc": "Represents a document filed in court."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L478"
  "insert": "LegalFiling"
  "methods":
  - "doc": "Returns a case caption for the case, for inclusion in documents.<br><a target='_blank' href='https://docassemble.org/docs/legal.html#LegalFiling.caption'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L481"
    "insert": ".caption()"
    "name": "caption"
    "tag": ".caption(self)"
  "name": "LegalFiling"
"MachineLearningEntry":
  "bases": []
  "doc": "An entry in the machine learning system"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L32"
  "insert": "MachineLearningEntry"
  "methods":
  - "doc": "Sets the dependent variable of the machine learning entry<br><a target='_blank' href='https://docassemble.org/docs/ml.html#MachineLearningEntry.classify'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L35"
    "insert": ".classify()"
    "name": "classify"
    "tag": ".classify(self, dependent=None)"
  - "doc": "Returns predictions for this entry's independent variable.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#MachineLearningEntry.predict'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L55"
    "insert": ".predict()"
    "name": "predict"
    "tag": ".predict(self, probabilities=False)"
  - "doc": "Saves the entry to the data set.  The independent variable must be\ndefined in order to save.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#MachineLearningEntry.save'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L41"
    "insert": ".save()"
    "name": "save"
    "tag": ".save(self)"
  "name": "MachineLearningEntry"
"Name":
  "bases": []
  "doc": "Base class for an object's name."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6359"
  "insert": "Name"
  "methods":
  - "doc": "Returns True if the name has been defined.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Name.defined'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6377"
    "insert": ".defined()"
    "name": "defined"
    "tag": ".defined(self)"
  - "doc": "Returns the familiar name."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6365"
    "insert": ".familiar()"
    "name": "familiar"
    "tag": ".familiar(self)"
  - "doc": "This method is included for compatibility with other types of names.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Name.firstlast'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6368"
    "insert": ".firstlast()"
    "name": "firstlast"
    "tag": ".firstlast(self)"
  - "doc": "Returns the full name.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Name.full'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6362"
    "insert": ".full()"
    "name": "full"
    "tag": ".full(self, **kwargs)"
  - "doc": "This method is included for compatibility with other types of names.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Name.lastfirst'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6371"
    "insert": ".lastfirst()"
    "name": "lastfirst"
    "tag": ".lastfirst(self)"
  - "doc": "This method is included for compatibility with other types of names."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6374"
    "insert": ".middle_initial()"
    "name": "middle_initial"
    "tag": ".middle_initial(self, with_period=True)"
  "name": "Name"
"Organization":
  "bases":
  - "Person"
  "doc": "Represents a company or organization."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7279"
  "insert": "Organization"
  "methods":
  - "doc": "Returns True or False depending on whether the organization\nserves the given county and/or handles the given problem.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Organization.will_handle'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7293"
    "insert": ".will_handle()"
    "name": "will_handle"
    "tag": ".will_handle(self, problem=None, county=None)"
  "name": "Organization"
"PartyList":
  "bases":
  - "DAList"
  "doc": "Represents a list of parties to a case.  The default object\ntype for items in the list is Individual."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L322"
  "insert": "PartyList"
  "methods": []
  "name": "PartyList"
"PeriodicFinancialList":
  "bases":
  - "FinancialList"
  "doc": "Represents a set of currency items, each of which has an associated period."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7241"
  "insert": "PeriodicFinancialList"
  "methods":
  - "doc": "Returns the total periodic value in the list, gathering the list items if necessary.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#PeriodicFinancialList.total'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7248"
    "insert": ".total()"
    "name": "total"
    "tag": ".total(self, period_to_use=1)"
  "name": "PeriodicFinancialList"
"PeriodicValue":
  "bases":
  - "Value"
  "doc": "Represents a value in a PeriodicFinancialList."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7204"
  "insert": "PeriodicValue"
  "methods":
  - "doc": "Returns the periodic value's amount for a full period,\nor 0 if the value does not exist.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#PeriodicValue.amount'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7207"
    "insert": ".amount()"
    "name": "amount"
    "tag": ".amount(self, period_to_use=1)"
  "name": "PeriodicValue"
"Person":
  "bases": []
  "doc": "Represents a legal or natural person."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6848"
  "insert": "Person"
  "methods":
  - "doc": "Returns the person name address as a block, for use in mailings.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.address_block'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6931"
    "insert": ".address_block()"
    "name": "address_block"
    "tag": ".address_block(self, language=None, international=False, show_country=False)"
  - "doc": "Given a verb like &quot;eat,&quot; returns &quot;did you eat&quot; or &quot;did John Smith eat,&quot;\ndepending on whether the person is the user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.did_question'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6988"
    "insert": ".did_question()"
    "name": "did_question"
    "tag": ".did_question(self, the_verb, **kwargs)"
  - "doc": "Like does_verb(), except uses the past tense of the verb.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.did_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7018"
    "insert": ".did_verb()"
    "name": "did_verb"
    "tag": ".did_verb(self, the_verb, **kwargs)"
  - "doc": "Given a verb like &quot;eat,&quot; returns &quot;do you eat&quot; or &quot;does John Smith eat,&quot;\ndepending on whether the person is the user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.do_question'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6982"
    "insert": ".do_question()"
    "name": "do_question"
    "tag": ".do_question(self, the_verb, **kwargs)"
  - "doc": "Given a verb like &quot;eat,&quot; returns &quot;eat&quot; or &quot;eats&quot;\ndepending on whether the person is the user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.does_verb'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7008"
    "insert": ".does_verb()"
    "name": "does_verb"
    "tag": ".does_verb(self, the_verb, **kwargs)"
  - "doc": "Returns an e-mail address for the person.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.email_address'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6964"
    "insert": ".email_address()"
    "name": "email_address"
    "tag": ".email_address(self, include_name=None)"
  - "doc": "Returns the person's fax_number, formatted appropriately."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6952"
    "insert": ".facsimile_number()"
    "name": "facsimile_number"
    "tag": ".facsimile_number(self, country=None)"
  - "doc": "Given a target like &quot;&quot;, returns &quot;have you married&quot; or &quot;has\nJohn Smith married,&quot; depending on whether the person is the\nuser.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.have_question'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7001"
    "insert": ".have_question()"
    "name": "have_question"
    "tag": ".have_question(self, the_target, **kwargs)"
  - "doc": "Returns True if the person's name has been set.  Otherwise, returns False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.identified'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6887"
    "insert": ".identified()"
    "name": "identified"
    "tag": ".identified(self)"
  - "doc": "Returns &quot;are you&quot; if the object is the user, otherwise returns\n&quot;is&quot; followed by the object name.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.is_are_you'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6918"
    "insert": ".is_are_you()"
    "name": "is_are_you"
    "tag": ".is_are_you(self, **kwargs)"
  - "doc": "Returns True if the person is the user, otherwise False.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.is_user'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6928"
    "insert": ".is_user()"
    "name": "is_user"
    "tag": ".is_user(self)"
  - "doc": "Given a word, returns a phrase indicating possession, but\nuses the variable name rather than the object's actual name.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.object_possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6912"
    "insert": ".object_possessive()"
    "name": "object_possessive"
    "tag": ".object_possessive(self, target, **kwargs)"
  - "doc": "Given a word like &quot;fish,&quot; returns &quot;your fish&quot; or\n&quot;John Smith's fish,&quot; depending on whether the person is the user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.possessive'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6906"
    "insert": ".possessive()"
    "name": "possessive"
    "tag": ".possessive(self, target, **kwargs)"
  - "doc": "Returns &quot;it&quot; or &quot;It&quot; depending on the value of the optional\nkeyword argument &quot;capitalize.&quot; <br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.pronoun_objective'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6899"
    "insert": ".pronoun_objective()"
    "name": "pronoun_objective"
    "tag": ".pronoun_objective(self, **kwargs)"
  - "doc": "Returns the person's mobile_number, if defined, otherwise the phone_number.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.sms_number'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6936"
    "insert": ".sms_number()"
    "name": "sms_number"
    "tag": ".sms_number(self, country=None)"
  - "doc": "Returns &quot;you&quot; or the person's name, depending on whether the\nperson is the user.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.subject'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7026"
    "insert": ".subject()"
    "name": "subject"
    "tag": ".subject(self, **kwargs)"
  - "doc": "Given a target like &quot;married&quot;, returns &quot;were you married&quot; or &quot;was\nJohn Smith married,&quot; depending on whether the person is the\nuser.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Person.were_question'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6994"
    "insert": ".were_question()"
    "name": "were_question"
    "tag": ".were_question(self, the_target, **kwargs)"
  "name": "Person"
"RandomForestMachineLearner":
  "bases":
  - "MachineLearner"
  "doc": "Base class for machine learning objects"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L418"
  "insert": "RandomForestMachineLearner"
  "methods":
  - "doc": "Creates an entry in the data for the given independent and dependent variable and returns the ID of the entry."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L557"
    "insert": ".add_to_training_set()"
    "name": "add_to_training_set"
    "tag": ".add_to_training_set(self, independent, dependent, key=None, info=None)"
  - "doc": "Returns a list of entries in the data that have been classified."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L544"
    "insert": ".classified_entries()"
    "name": "classified_entries"
    "tag": ".classified_entries(self, key=None)"
  - "doc": "Deletes all of the training data in the database that was added with a given key"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L541"
    "insert": ".delete_by_key()"
    "name": "delete_by_key"
    "tag": ".delete_by_key(self, key)"
  - "doc": "Returns a sorted list of unique dependent variables in the data."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L561"
    "insert": ".dependent_in_use()"
    "name": "dependent_in_use"
    "tag": ".dependent_in_use(self, key=None)"
  - "doc": "Returns the classified entries in the data as JSON or YAML."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L564"
    "insert": ".export_training_set()"
    "name": "export_training_set"
    "tag": ".export_training_set(self, output_format='json', key=None)"
  - "doc": "Returns the importances of each of the features"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L422"
    "insert": ".feature_importances()"
    "name": "feature_importances"
    "tag": ".feature_importances(self)"
  - "doc": "Returns the first entry in the data that has not yet been classified, or None if all entries have been classified."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L550"
    "insert": ".one_unclassified_entry()"
    "name": "one_unclassified_entry"
    "tag": ".one_unclassified_entry(self, key=None)"
  - "doc": "Returns a list of predicted dependent variables for a given independent variable."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L499"
    "insert": ".predict()"
    "name": "predict"
    "tag": ".predict(self, indep, probabilities=False)"
  - "doc": "Creates a not-yet-classified entry in the data for the given independent variable and returns the ID of the entry."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L553"
    "insert": ".save_for_classification()"
    "name": "save_for_classification"
    "tag": ".save_for_classification(self, indep, key=None, info=None)"
  - "doc": "Returns a list of entries in the data that have not yet been classified."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L547"
    "insert": ".unclassified_entries()"
    "name": "unclassified_entries"
    "tag": ".unclassified_entries(self, key=None)"
  "name": "RandomForestMachineLearner"
"RelationshipTree":
  "bases": []
  "doc": "A data structure that maps the relationships among people."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1211"
  "insert": "RelationshipTree"
  "methods":
  - "doc": "Creates a relationship between the person and another object."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1302"
    "insert": ".add_relationship_dir()"
    "name": "add_relationship_dir"
    "tag": ".add_relationship_dir(self, parent=None, child=None, relationship_type=None)"
  - "doc": "Creates a relationship between the person and another object."
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1318"
    "insert": ".add_relationship_peer()"
    "name": "add_relationship_peer"
    "tag": ".add_relationship_peer(self, *pargs, **kwargs)"
  - "doc": "Deletes the given relationship(s)"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1315"
    "insert": ".delete_dir()"
    "name": "delete_dir"
    "tag": ".delete_dir(self, *pargs)"
  - "doc": "Deletes the given peer relationship(s)"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1327"
    "insert": ".delete_peer()"
    "name": "delete_peer"
    "tag": ".delete_peer(self, *pargs)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1229"
    "insert": ".new()"
    "name": "new"
    "tag": ".new(self, *pargs, **kwargs)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1291"
    "insert": ".query_dir()"
    "name": "query_dir"
    "tag": ".query_dir(self, *pargs, **kwargs)"
  - "doc": !!null "null"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L1280"
    "insert": ".query_peer()"
    "name": "query_peer"
    "tag": ".query_peer(self, *pargs, **kwargs)"
  "name": "RelationshipTree"
"RoleChangeTracker":
  "bases": []
  "doc": "Used within an interview to facilitate changes in the active role\nrequired for filling in interview information.  Ensures that participants\ndo not receive multi..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6315"
  "insert": "RoleChangeTracker"
  "methods":
  - "doc": "Sends a notification e-mail if necessary because of a change in the\nactive of the interviewee.  Returns True if an e-mail was\nsuccessfully sent.  Otherwise, ret...<br><a target='_blank' href='https://docassemble.org/docs/objects.html#RoleChangeTracker.send_email'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6332"
    "insert": ".send_email()"
    "name": "send_email"
    "tag": ".send_email(self, roles_needed, **kwargs)"
  "name": "RoleChangeTracker"
"SVMMachineLearner":
  "bases":
  - "SimpleTextMachineLearner"
  "doc": "Machine Learning object using the Symmetric Vector Machine method"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L413"
  "insert": "SVMMachineLearner"
  "methods": []
  "name": "SVMMachineLearner"
"SimpleTextMachineLearner":
  "bases":
  - "MachineLearner"
  "doc": "A class used to interact with the machine learning system, using the K Nearest Neighbors method"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L304"
  "insert": "SimpleTextMachineLearner"
  "methods":
  - "doc": "Returns a list of entries in the data that have been classified.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.classified_entries'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L398"
    "insert": ".classified_entries()"
    "name": "classified_entries"
    "tag": ".classified_entries(self, key=None)"
  - "doc": "Returns a confusion matrix for the model based on splitting the data set randomly into two pieces, training on one and testing on the other<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.confusion_matrix'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L335"
    "insert": ".confusion_matrix()"
    "name": "confusion_matrix"
    "tag": ".confusion_matrix(self, key=None, output_format=None, split=False)"
  - "doc": "Deletes all of the training data in the database that was added with a given key<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.delete_by_key'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L395"
    "insert": ".delete_by_key()"
    "name": "delete_by_key"
    "tag": ".delete_by_key(self, key)"
  - "doc": "Returns a sorted list of unique dependent variables in the data.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.dependent_in_use'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L410"
    "insert": ".dependent_in_use()"
    "name": "dependent_in_use"
    "tag": ".dependent_in_use(self, key=None)"
  - "doc": "Returns the first entry in the data that has not yet been classified, or None if all entries have been classified.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.one_unclassified_entry'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L404"
    "insert": ".one_unclassified_entry()"
    "name": "one_unclassified_entry"
    "tag": ".one_unclassified_entry(self, key=None)"
  - "doc": "Returns a list of predicted dependent variables for a given independent variable.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.predict'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L321"
    "insert": ".predict()"
    "name": "predict"
    "tag": ".predict(self, indep, probabilities=False)"
  - "doc": "Creates a not-yet-classified entry in the data for the given independent variable and returns the ID of the entry.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.save_for_classification'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L407"
    "insert": ".save_for_classification()"
    "name": "save_for_classification"
    "tag": ".save_for_classification(self, indep, key=None, info=None)"
  - "doc": "Returns a list of entries in the data that have not yet been classified.<br><a target='_blank' href='https://docassemble.org/docs/ml.html#SimpleTextMachineLearner.unclassified_entries'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_webapp/docassemble/webapp/machinelearning.py#L401"
    "insert": ".unclassified_entries()"
    "name": "unclassified_entries"
    "tag": ".unclassified_entries(self, key=None)"
  "name": "SimpleTextMachineLearner"
"Thing":
  "bases": []
  "doc": "Represents something with a name."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6812"
  "insert": "Thing"
  "methods": []
  "name": "Thing"
"Value":
  "bases": []
  "doc": "Represents a value in a FinancialList."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7176"
  "insert": "Value"
  "methods":
  - "doc": "Returns the value's amount, or 0 if the value does not exist.<br><a target='_blank' href='https://docassemble.org/docs/objects.html#Value.amount'>View documentation</a><br><br><br>"
    "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7179"
    "insert": ".amount()"
    "name": "amount"
    "tag": ".amount(self)"
  "name": "Value"
"action_argument":
  "doc": "Used when processing an &quot;action.&quot;  Returns the value of the given\nargument, which is assumed to have been passed to url_action() or\ninterview_url_acti..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L751"
  "insert": "action_argument()"
  "name": "action_argument"
  "tag": "action_argument(item=None)"
"action_arguments":
  "doc": "Used when processing an &quot;action.&quot;  Returns a dictionary with the\narguments passed to url_action() or interview_url_action()."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L744"
  "insert": "action_arguments()"
  "name": "action_arguments"
  "tag": "action_arguments()"
"action_button_html":
  "doc": "Returns HTML for a button that visits a particular URL."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8260"
  "insert": "action_button_html()"
  "name": "action_button_html"
  "tag": "action_button_html(url, icon=None, color='success', size='sm', block=False, label='Edit', classname=None, new_window=None, id_tag=None)"
"action_menu_item":
  "doc": "Takes two arguments, a label and an action, and optionally takes\nkeyword arguments that are passed on to the action.  The label is\nwhat the user will see and th..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3943"
  "insert": "action_menu_item()"
  "name": "action_menu_item"
  "tag": "action_menu_item(label, action, **kwargs)"
"add_separators":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "add_separators()"
  "name": "add_separators"
  "tag": "add_separators(*args, **kwargs)"
"all_variables":
  "doc": "Returns the interview variables as a dictionary suitable for export to JSON or other formats."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3331"
  "insert": "all_variables()"
  "name": "all_variables"
  "tag": "all_variables(simplify=True, include_internal=False, special=False, make_copy=False)"
"alpha":
  "doc": "Given an index, returns A, B, C ... Z, AA, AB, etc."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2002"
  "insert": "alpha()"
  "name": "alpha"
  "tag": "alpha(num, case=None)"
"as_datetime":
  "doc": "Converts the_date to a DADateTime object with a timezone.  Uses the\ndefault timezone unless another timezone is explicitly provided."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6043"
  "insert": "as_datetime()"
  "name": "as_datetime"
  "tag": "as_datetime(the_date, timezone=None)"
"assemble_docx":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8381"
  "insert": "assemble_docx()"
  "name": "assemble_docx"
  "tag": "assemble_docx(input_file, fields=None, output_path=None, output_format='docx', return_content=False, pdf_options=None, filename=None)"
"background_action":
  "doc": "Runs an action in the background."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1865"
  "insert": "background_action()"
  "name": "background_action"
  "tag": "background_action(*pargs, **kwargs)"
"background_error_action":
  "doc": "Indicates an action that should be run if the current background task results in an error."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1861"
  "insert": "background_error_action()"
  "name": "background_error_action"
  "tag": "background_error_action(*pargs, **kwargs)"
"background_response":
  "doc": "Finishes a background task."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1853"
  "insert": "background_response()"
  "name": "background_response"
  "tag": "background_response(*pargs, **kwargs)"
"background_response_action":
  "doc": "Finishes a background task by running an action to save values."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1857"
  "insert": "background_response_action()"
  "name": "background_response_action"
  "tag": "background_response_action(*pargs, **kwargs)"
"bold":
  "doc": "Adds Markdown tags to make the text bold if it is not blank."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4524"
  "insert": "bold()"
  "name": "bold"
  "tag": "bold(text, default=None)"
"capitalize":
  "doc": "Capitalizes the first letter of the word or phrase."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "capitalize()"
  "name": "capitalize"
  "tag": "capitalize(*args, **kwargs)"
"chain":
  "bases":
  - "object"
  "doc": "chain(*iterables) --&gt; chain object\n\nReturn a chain object whose .__next__() method returns elements from the\nfirst iterable until it is exhausted, then eleme..."
  "git": !!null "null"
  "insert": "chain"
  "methods": []
  "name": "chain"
"chat_partners_available":
  "doc": "Given a list of partner roles, returns the number of operators and\npeers available to chat with the user."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L791"
  "insert": "chat_partners_available()"
  "name": "chat_partners_available"
  "tag": "chat_partners_available(*pargs, **kwargs)"
"clear_explanations":
  "doc": "Erases the history of explanations."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8339"
  "insert": "clear_explanations()"
  "name": "clear_explanations"
  "tag": "clear_explanations(category='default')"
"comma_and_list":
  "doc": "Returns the arguments separated by commas with &quot;and&quot; before the last one."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "comma_and_list()"
  "name": "comma_and_list"
  "tag": "comma_and_list(*args, **kwargs)"
"comma_list":
  "doc": "Returns the arguments separated by commas."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "comma_list()"
  "name": "comma_list"
  "tag": "comma_list(*args, **kwargs)"
"command":
  "doc": "Executes a command, such as exit, logout, restart, or leave."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3351"
  "insert": "command()"
  "name": "command"
  "tag": "command(*pargs, **kwargs)"
"countries_list":
  "doc": "Returns a list of countries, suitable for use in a multiple choice field."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L634"
  "insert": "countries_list()"
  "name": "countries_list"
  "tag": "countries_list()"
"country_name":
  "doc": "Given a two-digit country code, returns the country name."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L331"
  "insert": "country_name()"
  "name": "country_name"
  "tag": "country_name(country_code)"
"create_session":
  "doc": "Creates a new session in the given interview."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4791"
  "insert": "create_session()"
  "name": "create_session"
  "tag": "create_session(yaml_filename, secret=None, url_args=None)"
"create_user":
  "doc": "Creates a user account with the given e-mail and password, returning the user ID of the new account."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4780"
  "insert": "create_user()"
  "name": "create_user"
  "tag": "create_user(email, password, privileges=None, info=None)"
"currency":
  "doc": "Formats the argument as a currency value, according to language and locale."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "currency()"
  "name": "currency"
  "tag": "currency(*args, **kwargs)"
"currency_symbol":
  "doc": "Returns the symbol for currency, according to the locale."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "currency_symbol()"
  "name": "currency_symbol"
  "tag": "currency_symbol(*args, **kwargs)"
"current_datetime":
  "doc": "Returns the current time.  Uses the default timezone unless another\ntimezone is explicitly provided."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6033"
  "insert": "current_datetime()"
  "name": "current_datetime"
  "tag": "current_datetime(timezone=None)"
"date_difference":
  "doc": "Calculates the difference between the date indicated by &quot;starting&quot;\nand the date indicated by &quot;ending.&quot;  Returns an object with attributes we..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6075"
  "insert": "date_difference()"
  "name": "date_difference"
  "tag": "date_difference(starting=None, ending=None, timezone=None)"
"date_interval":
  "doc": "Expresses a date and time interval.  Passes through all arguments\nto dateutil.relativedelta.relativedelta."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6069"
  "insert": "date_interval()"
  "name": "date_interval"
  "tag": "date_interval(**kwargs)"
"day_of":
  "doc": "Interprets the_date as a date and returns the day of month."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5861"
  "insert": "day_of()"
  "name": "day_of"
  "tag": "day_of(the_date, language=None)"
"decode_name":
  "doc": "Convert a base64-encoded variable name to plain text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4674"
  "insert": "decode_name()"
  "name": "decode_name"
  "tag": "decode_name(var)"
"define":
  "doc": "Sets the given variable, expressed as a string, to the given value."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4100"
  "insert": "define()"
  "name": "define"
  "tag": "define(var, val)"
"defined":
  "doc": "Returns true if the variable has already been defined.  Otherwise, returns false."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4243"
  "insert": "defined()"
  "name": "defined"
  "tag": "defined(var: str) -> bool"
"delete_record":
  "doc": "Deletes a record with the given key and id."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1587"
  "insert": "delete_record()"
  "name": "delete_record"
  "tag": "delete_record(key, the_id)"
"device":
  "doc": "Returns an object describing the device the user is using, or the\nuser's IP address if the optional keyword argument 'ip' is\nTrue."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L231"
  "insert": "device()"
  "name": "device"
  "tag": "device(ip=False)"
"dispatch":
  "doc": "Shows a menu screen."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4071"
  "insert": "dispatch()"
  "name": "dispatch"
  "tag": "dispatch(var)"
"docx_concatenate":
  "doc": "Concatenates DOCX files together and returns a DAFile representing\nthe new DOCX file."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8041"
  "insert": "docx_concatenate()"
  "name": "docx_concatenate"
  "tag": "docx_concatenate(*pargs, **kwargs)"
"dow_of":
  "doc": "Interprets the_date as a date and returns the day of week as a number from 1 to 7 for Sunday through Saturday.  Set as_word to True if you want the day of week ..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5873"
  "insert": "dow_of()"
  "name": "dow_of"
  "tag": "dow_of(the_date, as_word=False, language=None)"
"encode_name":
  "doc": "Convert a variable name to base64-encoded form for inclusion in an HTML element."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4670"
  "insert": "encode_name()"
  "name": "encode_name"
  "tag": "encode_name(var)"
"explain":
  "doc": "Add a line to the explanations history."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8330"
  "insert": "explain()"
  "name": "explain"
  "tag": "explain(the_explanation, category='default')"
"fix_punctuation":
  "doc": "Ensures the text ends with punctuation."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1957"
  "insert": "fix_punctuation()"
  "name": "fix_punctuation"
  "tag": "fix_punctuation(text, mark=None, other_marks=None)"
"force_ask":
  "doc": "Given a variable name, instructs docassemble to ask a question that\nwould define the variable, even if the variable has already been\ndefined.  This does not cha..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3365"
  "insert": "force_ask()"
  "name": "force_ask"
  "tag": "force_ask(*pargs, **kwargs)"
"force_gather":
  "doc": "Similar to force_ask(), except it works globally across all users\nand sessions and it does not seek definitions of already-defined\nvariables. In addition to mak..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3387"
  "insert": "force_gather()"
  "name": "force_gather"
  "tag": "force_gather(*pargs, forget_prior=False)"
"forget_result_of":
  "doc": "Resets the user's answer to an embedded code question or mandatory code block."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4943"
  "insert": "forget_result_of()"
  "name": "forget_result_of"
  "tag": "forget_result_of(*pargs)"
"format_date":
  "doc": "Interprets the_date as a date and returns the date formatted for the current locale."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5911"
  "insert": "format_date()"
  "name": "format_date"
  "tag": "format_date(the_date, format=None, language=None)"
"format_datetime":
  "doc": "Interprets the_date as a date/time and returns the date/time formatted for the current locale."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5929"
  "insert": "format_datetime()"
  "name": "format_datetime"
  "tag": "format_datetime(the_date, format=None, language=None)"
"format_time":
  "doc": "Interprets the_time as a date/time and returns the time formatted for the current locale."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5947"
  "insert": "format_time()"
  "name": "format_time"
  "tag": "format_time(the_time, format=None, language=None)"
"from_b64_json":
  "doc": "Converts the string from base-64, then parses the string as JSON, and returns the object.\nThis is an advanced function that is used by software developers to in..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3961"
  "insert": "from_b64_json()"
  "name": "from_b64_json"
  "tag": "from_b64_json(string)"
"get_chat_log":
  "doc": "Returns the messages in the chat log of the interview."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L211"
  "insert": "get_chat_log()"
  "name": "get_chat_log"
  "tag": "get_chat_log(utc=False, timezone=None)"
"get_config":
  "doc": "Returns a value from the docassemble configuration.  If not\ndefined, returns None or the value of the optional keyword\nargument, none_value."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2147"
  "insert": "get_config()"
  "name": "get_config"
  "tag": "get_config(key, none_value=None)"
"get_country":
  "doc": "Returns the current country (e.g., &quot;US&quot;)."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2242"
  "insert": "get_country()"
  "name": "get_country"
  "tag": "get_country()"
"get_default_timezone":
  "doc": "Returns the default timezone (e.g., 'America/New_York').  This is\nthe time zone of the server, unless the default timezone is set in\nthe docassemble configuration."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2174"
  "insert": "get_default_timezone()"
  "name": "get_default_timezone"
  "tag": "get_default_timezone()"
"get_dialect":
  "doc": "Returns the current dialect."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2246"
  "insert": "get_dialect()"
  "name": "get_dialect"
  "tag": "get_dialect()"
"get_emails":
  "doc": "Returns a data structure representing existing e-mail addresses for the interview and any e-mails sent to those e-mail addresses"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L830"
  "insert": "get_emails()"
  "name": "get_emails"
  "tag": "get_emails(key=None, index=None)"
"get_info":
  "doc": "Used to retrieve the values of global variables set through set_info()."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1205"
  "insert": "get_info()"
  "name": "get_info"
  "tag": "get_info(att)"
"get_language":
  "doc": "Returns the current language (e.g., &quot;en&quot;)."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2234"
  "insert": "get_language()"
  "name": "get_language"
  "tag": "get_language()"
"get_locale":
  "doc": "Given no argments, returns the current locale setting. Given one\nargument, returns the locale convention indicated by the argument."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2261"
  "insert": "get_locale()"
  "name": "get_locale"
  "tag": "get_locale(*pargs)"
"get_progress":
  "doc": "Returns the position of the progress meter."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1223"
  "insert": "get_progress()"
  "name": "get_progress"
  "tag": "get_progress()"
"get_question_data":
  "doc": "Returns data about the current question for the given interview session."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4830"
  "insert": "get_question_data()"
  "name": "get_question_data"
  "tag": "get_question_data(yaml_filename, session_id, secret=None)"
"get_session_variables":
  "doc": "Returns the interview dictionary for the given interview session."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4800"
  "insert": "get_session_variables()"
  "name": "get_session_variables"
  "tag": "get_session_variables(yaml_filename, session_id, secret=None, simplify=True)"
"get_sms_session":
  "doc": "Returns the SMS session information for a phone number, or None if no session exists."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7331"
  "insert": "get_sms_session()"
  "name": "get_sms_session"
  "tag": "get_sms_session(phone_number, config='default')"
"get_status":
  "doc": "Retrieves a setting of the interview session."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8362"
  "insert": "get_status()"
  "name": "get_status"
  "tag": "get_status(setting)"
"get_user_info":
  "doc": "Returns information about the given user, or the current user, if no user ID or e-mail is provided."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4756"
  "insert": "get_user_info()"
  "name": "get_user_info"
  "tag": "get_user_info(user_id=None, email=None)"
"get_user_list":
  "doc": "Returns a list of users on the system."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4711"
  "insert": "get_user_list()"
  "name": "get_user_list"
  "tag": "get_user_list(include_inactive=False, next_id=None)"
"get_user_secret":
  "doc": "Tests the username and password and if they are valid, returns the\ndecryption key for the user account."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4784"
  "insert": "get_user_secret()"
  "name": "get_user_secret"
  "tag": "get_user_secret(username, password)"
"go_back_in_session":
  "doc": "Goes back one step in an interview session."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4838"
  "insert": "go_back_in_session()"
  "name": "go_back_in_session"
  "tag": "go_back_in_session(yaml_filename, session_id, secret=None)"
"include_docx_template":
  "doc": "Include the contents of one docx file inside another docx file."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/file_docx.py#L120"
  "insert": "include_docx_template()"
  "name": "include_docx_template"
  "tag": "include_docx_template(template_file, **kwargs)"
"indefinite_article":
  "doc": "Given a noun, returns the noun with an indefinite article attached\n(e.g., indefinite_article(&quot;fish&quot;) returns &quot;a fish&quot;)."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "indefinite_article()"
  "name": "indefinite_article"
  "tag": "indefinite_article(*args, **kwargs)"
"indent":
  "doc": "Indents multi-line text by four spaces.  To indent by a different\namount, use the optional keyword argument 'by' to specify a\ndifferent number of spaces."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4549"
  "insert": "indent()"
  "name": "indent"
  "tag": "indent(text, by=None)"
"initiate_sms_session":
  "doc": "Initiates a new SMS session for a phone number, overwriting any that is currently active."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7339"
  "insert": "initiate_sms_session()"
  "name": "initiate_sms_session"
  "tag": "initiate_sms_session(phone_number, yaml_filename=None, email=None, new=False, send=True, config='default')"
"interface":
  "doc": "Returns web, json, api, sms, cron, or worker, depending on how the interview is being accessed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L653"
  "insert": "interface()"
  "name": "interface"
  "tag": "interface()"
"interview_email":
  "doc": "Returns an e-mail address that can be used to send e-mail messages to the case"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L823"
  "insert": "interview_email()"
  "name": "interview_email"
  "tag": "interview_email(key=None, index=None)"
"interview_list":
  "doc": "Returns a list of interviews that users have started."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4678"
  "insert": "interview_list()"
  "name": "interview_list"
  "tag": "interview_list(exclude_invalid=True, action=None, filename=None, session=None, user_id=None, query=None, include_dict=True, delete_shared=False, next_id=None)"
"interview_menu":
  "doc": "Returns the list of interviews that is offered at /list."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4707"
  "insert": "interview_menu()"
  "name": "interview_menu"
  "tag": "interview_menu(*pargs, **kwargs)"
"interview_url":
  "doc": "Returns a URL that is direct link to the interview and the current\nvariable store.  This is used in multi-user interviews to invite\nadditional users to particip..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L849"
  "insert": "interview_url()"
  "name": "interview_url"
  "tag": "interview_url(**kwargs)"
"interview_url_action":
  "doc": "Like interview_url, except it additionally specifies an action.\nThe keyword arguments are arguments to the action, except for the keyword\narguments local, i, an..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1067"
  "insert": "interview_url_action()"
  "name": "interview_url_action"
  "tag": "interview_url_action(action, **kwargs)"
"interview_url_action_as_qr":
  "doc": "Like interview_url_as_qr, except it additionally specifies an\naction.  The keyword arguments are arguments to the action."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1190"
  "insert": "interview_url_action_as_qr()"
  "name": "interview_url_action_as_qr"
  "tag": "interview_url_action_as_qr(action, **kwargs)"
"interview_url_as_qr":
  "doc": "Inserts into the markup a QR code linking to the interview.\nThis can be used to pass control from a web browser or a paper\nhandout to a mobile device."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1174"
  "insert": "interview_url_as_qr()"
  "name": "interview_url_as_qr"
  "tag": "interview_url_as_qr(**kwargs)"
"invalidate":
  "doc": "Invalidates the variable or variables if they exist."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4021"
  "insert": "invalidate()"
  "name": "invalidate"
  "tag": "invalidate(*pargs)"
"iso_country":
  "doc": "Returns a best-guess ISO 3166-1 country information given a country\nname.  The optional keyword parameter &quot;part&quot; can be alpha_2,\nalpha_3, name, or off..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6784"
  "insert": "iso_country()"
  "name": "iso_country"
  "tag": "iso_country(country, part='alpha_2')"
"italic":
  "doc": "Adds Markdown tags to make the text italic if it is not blank."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4534"
  "insert": "italic()"
  "name": "italic"
  "tag": "italic(text, default=None)"
"item_label":
  "doc": "Given an index and an outline level, returns I., II., A., etc."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1974"
  "insert": "item_label()"
  "name": "item_label"
  "tag": "item_label(num, level=None, punctuation=True)"
"json":
  "doc": "JSON (JavaScript Object Notation) &lt;http://json.org&gt; is a subset of\nJavaScript syntax (ECMA-262 3rd edition) used as a lightweight data\ninterchange format...."
  "git": !!null "null"
  "insert": "json"
  "name": "json"
"json_response":
  "doc": "Sends data in JSON format as an HTTP response."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3309"
  "insert": "json_response()"
  "name": "json_response"
  "tag": "json_response(data, response_code=None)"
"language_from_browser":
  "doc": "Attempts to determine the user's language based on information supplied by the user's web browser."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L277"
  "insert": "language_from_browser()"
  "name": "language_from_browser"
  "tag": "language_from_browser(*pargs)"
"language_name":
  "doc": "Given a 2 digit language code abbreviation, returns the full name\nof the language. The language name will be passed through the\n`word()` function."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L350"
  "insert": "language_name()"
  "name": "language_name"
  "tag": "language_name(language_code)"
"last_access_days":
  "doc": "Returns the number of days since the last time the interview\nwas accessed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6201"
  "insert": "last_access_days()"
  "name": "last_access_days"
  "tag": "last_access_days(*pargs, **kwargs)"
"last_access_delta":
  "doc": "Returns a datetime.timedelta object expressing the length of\ntime that has passed since the last time the interview was accessed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6193"
  "insert": "last_access_delta()"
  "name": "last_access_delta"
  "tag": "last_access_delta(*pargs, **kwargs)"
"last_access_hours":
  "doc": "Returns the number of hours since the last time the interview\nwas accessed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6207"
  "insert": "last_access_hours()"
  "name": "last_access_hours"
  "tag": "last_access_hours(*pargs, **kwargs)"
"last_access_minutes":
  "doc": "Returns the number of minutes since the last time the interview\nwas accessed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6213"
  "insert": "last_access_minutes()"
  "name": "last_access_minutes"
  "tag": "last_access_minutes(*pargs, **kwargs)"
"last_access_time":
  "doc": "Returns the last time the interview was accessed, as a DADateTime object."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6219"
  "insert": "last_access_time()"
  "name": "last_access_time"
  "tag": "last_access_time(include_privileges=None, exclude_privileges=None, include_cron=False, timezone=None)"
"location_known":
  "doc": "Returns True or False depending on whether docassemble was able to learn the user's\nGPS location through the web browser."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L777"
  "insert": "location_known()"
  "name": "location_known"
  "tag": "location_known()"
"location_returned":
  "doc": "Returns True or False depending on whether an attempt has yet\nbeen made to transmit the user's GPS location from the browser to\ndocassemble.  Will return true e..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L763"
  "insert": "location_returned()"
  "name": "location_returned"
  "tag": "location_returned()"
"log":
  "doc": "Log a message to the server or the browser."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4657"
  "insert": "log()"
  "name": "log"
  "tag": "log(message, priority='log')"
"logic_explanation":
  "doc": "Returns the list of explanations."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8349"
  "insert": "logic_explanation()"
  "name": "logic_explanation"
  "tag": "logic_explanation(category='default')"
"manage_privileges":
  "doc": "Gets or sets information about privileges on the system."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4728"
  "insert": "manage_privileges()"
  "name": "manage_privileges"
  "tag": "manage_privileges(*pargs)"
"map_of":
  "doc": "Inserts into markup a Google Map representing the objects passed as arguments."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7641"
  "insert": "map_of()"
  "name": "map_of"
  "tag": "map_of(*pargs, **kwargs)"
"mark_task_as_performed":
  "doc": "Increases by 1 the number of times the task has been performed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8516"
  "insert": "mark_task_as_performed()"
  "name": "mark_task_as_performed"
  "tag": "mark_task_as_performed(task, persistent=False)"
"message":
  "doc": "Presents a screen to the user with the given message."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3301"
  "insert": "message()"
  "name": "message"
  "tag": "message(*pargs, **kwargs)"
"month_of":
  "doc": "Interprets the_date as a date and returns the month.\nSet as_word to True if you want the month as a word."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5844"
  "insert": "month_of()"
  "name": "month_of"
  "tag": "month_of(the_date, as_word=False, language=None)"
"name_suffix":
  "doc": "Returns an array of choices for the suffix of a name.\nThis is meant to be used in code for a multiple-choice field."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "name_suffix()"
  "name": "name_suffix"
  "tag": "name_suffix(*args, **kwargs)"
"need":
  "doc": "Given one or more variables, this function instructs docassemble\nto do what is necessary to define the variables."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2396"
  "insert": "need()"
  "name": "need"
  "tag": "need(*pargs)"
"nice_number":
  "doc": "Takes a number as an argument and returns the number as a word if ten or below."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "nice_number()"
  "name": "nice_number"
  "tag": "nice_number(*args, **kwargs)"
"noun_plural":
  "doc": "Given a noun, returns the plural version of the noun, unless the optional second argument indicates a quantity of 1."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "noun_plural()"
  "name": "noun_plural"
  "tag": "noun_plural(*args, **kwargs)"
"noun_singular":
  "doc": "Given a noun, returns the singular version of the noun, unless the optional second argument indicates a quantity other than 1."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "noun_singular()"
  "name": "noun_singular"
  "tag": "noun_singular(*args, **kwargs)"
"noyes":
  "doc": "Returns 'No' or 'Yes' depending on whether the given value is true\nor false, respectively.  This is used for populating PDF\ncheckboxes."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4579"
  "insert": "noyes()"
  "name": "noyes"
  "tag": "noyes(the_value, invert=False)"
"objects_from_file":
  "doc": "A utility function for initializing a group of objects from a YAML file written in a certain format."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5097"
  "insert": "objects_from_file()"
  "name": "objects_from_file"
  "tag": "objects_from_file(file_ref, recursive=True, gathered=True, name=None, use_objects=False, package=None)"
"ocr_file":
  "doc": "Runs optical character recognition on one or more image files or PDF\nfiles and returns the recognized text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7816"
  "insert": "ocr_file()"
  "name": "ocr_file"
  "tag": "ocr_file(image_file, language=None, psm=6, f=None, l=None, x=None, y=None, W=None, H=None, use_google=False, raw_result=False)"
"ocr_file_in_background":
  "doc": "Starts optical character recognition on one or more image files or PDF\nfiles and returns an object representing the background task created."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7681"
  "insert": "ocr_file_in_background()"
  "name": "ocr_file_in_background"
  "tag": "ocr_file_in_background(*pargs, **kwargs)"
"ordinal":
  "doc": "Given a number that is expected to be an index, returns &quot;first&quot; or &quot;23rd&quot; for 0 or 22, respectively."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "ordinal()"
  "name": "ordinal"
  "tag": "ordinal(*args, **kwargs)"
"ordinal_number":
  "doc": "Given a number, returns &quot;first&quot; or &quot;23rd&quot; for 1 or 23, respectively."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "ordinal_number()"
  "name": "ordinal_number"
  "tag": "ordinal_number(*args, **kwargs)"
"overlay_pdf":
  "doc": "Overlays one or more pages from a PDF file on top of the pages of another PDF file."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8301"
  "insert": "overlay_pdf()"
  "name": "overlay_pdf"
  "tag": "overlay_pdf(main_pdf, logo_pdf, first_page=None, last_page=None, logo_page=None, only=None, multi=False)"
"path_and_mimetype":
  "doc": "Returns a path and the MIME type of a file"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7949"
  "insert": "path_and_mimetype()"
  "name": "path_and_mimetype"
  "tag": "path_and_mimetype(file_ref)"
"pdf_concatenate":
  "doc": "Concatenates PDF files together and returns a DAFile representing\nthe new PDF."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8069"
  "insert": "pdf_concatenate()"
  "name": "pdf_concatenate"
  "tag": "pdf_concatenate(*pargs, **kwargs)"
"period_list":
  "doc": "Returns an array of arrays where the first element of each array is a number,\nand the second element is a word expressing what that numbers means as a per-year\n..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "period_list()"
  "name": "period_list"
  "tag": "period_list(*args, **kwargs)"
"phone_number_formatted":
  "doc": "Given a phone number and a country code, returns the number in\nthe standard format for the country.  Returns None if the number\ncould not be so formatted."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4392"
  "insert": "phone_number_formatted()"
  "name": "phone_number_formatted"
  "tag": "phone_number_formatted(number, country=None)"
"phone_number_in_e164":
  "doc": "Given a phone number and a country code, returns the number in\nE.164 format.  Returns None if the number could not be so formatted."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4335"
  "insert": "phone_number_in_e164()"
  "name": "phone_number_in_e164"
  "tag": "phone_number_in_e164(number, country=None)"
"phone_number_is_valid":
  "doc": "Given a phone number and a country code, returns True if the phone number is valid, otherwise False."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4356"
  "insert": "phone_number_is_valid()"
  "name": "phone_number_is_valid"
  "tag": "phone_number_is_valid(number, country=None)"
"phone_number_part":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4373"
  "insert": "phone_number_part()"
  "name": "phone_number_part"
  "tag": "phone_number_part(number, part, country=None)"
"plain":
  "doc": "Substitutes empty string or the value of the default parameter if the text is empty."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4514"
  "insert": "plain()"
  "name": "plain"
  "tag": "plain(text, default=None)"
"prevent_going_back":
  "doc": "Instructs docassemble to disable the user's back button, so that the user cannot\ngo back and change any answers before this point in the interview."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2216"
  "insert": "prevent_going_back()"
  "name": "prevent_going_back"
  "tag": "prevent_going_back()"
"process_action":
  "doc": "If an action is waiting to be processed, it processes the action."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3590"
  "insert": "process_action()"
  "name": "process_action"
  "tag": "process_action()"
"qr_code":
  "doc": "Inserts appropriate markup to include a QR code image.  If you know\nthe string you want to encode, you can just use the &quot;[QR ...]&quot; markup.\nThis functi..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3454"
  "insert": "qr_code()"
  "name": "qr_code"
  "tag": "qr_code(string, width=None, alt_text=None)"
"quantity_noun":
  "doc": "Takes a number and a singular noun as an argument and returns the number as a word if ten or below, followed by the noun in a singular or plural form depending ..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "quantity_noun()"
  "name": "quantity_noun"
  "tag": "quantity_noun(*args, **kwargs)"
"quote_paragraphs":
  "doc": "Adds Markdown to quote all paragraphs in the text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4291"
  "insert": "quote_paragraphs()"
  "name": "quote_paragraphs"
  "tag": "quote_paragraphs(text)"
"raw":
  "doc": "This function is only used when passing values to a docx template\nfile.  It causes a value to be passed as-is, so that it can be\nused by Jinja2 template code, f..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L95"
  "insert": "raw()"
  "name": "raw"
  "tag": "raw(val)"
"re":
  "doc": "Support for regular expressions (RE).\n\nThis module provides regular expression matching operations similar to\nthose found in Perl.  It supports both 8-bit and U..."
  "git": !!null "null"
  "insert": "re"
  "name": "re"
"re_run_logic":
  "doc": "Run the interview logic from the beginning."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4954"
  "insert": "re_run_logic()"
  "name": "re_run_logic"
  "tag": "re_run_logic()"
"read_qr":
  "doc": "Reads QR codes from a file or files and returns a list of codes found."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7892"
  "insert": "read_qr()"
  "name": "read_qr"
  "tag": "read_qr(image_file, f=None, l=None, x=None, y=None, W=None, H=None)"
"read_records":
  "doc": "Returns a dictionary of records that have been stored with\nwrite_record() using the given key.  In the dictionary, the key is\nthe unique ID integer of the recor..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1580"
  "insert": "read_records()"
  "name": "read_records"
  "tag": "read_records(key)"
"reconsider":
  "doc": "Ensures that the value of one or more variables is freshly calculated."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4958"
  "insert": "reconsider()"
  "name": "reconsider"
  "tag": "reconsider(*pargs)"
"redact":
  "doc": "Redact the given text from documents, except when redaction is turned off for the given file."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4849"
  "insert": "redact()"
  "name": "redact"
  "tag": "redact(text)"
"referring_url":
  "doc": "Returns the URL that the user was visiting when the session was created."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4488"
  "insert": "referring_url()"
  "name": "referring_url"
  "tag": "referring_url(default=None, current=False)"
"response":
  "doc": "Sends a custom HTTP response."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3305"
  "insert": "response()"
  "name": "response"
  "tag": "response(*pargs, **kwargs)"
"retrieve_stashed_data":
  "doc": "Retrieves data stored with stash_data()."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8567"
  "insert": "retrieve_stashed_data()"
  "name": "retrieve_stashed_data"
  "tag": "retrieve_stashed_data(stash_key, secret, delete=False, refresh=False)"
"returning_user":
  "doc": "Returns True if the user is returning to the interview after six\nhours of inactivity, or other time indicated by the optional\nkeyword arguments minutes, hours, ..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6175"
  "insert": "returning_user()"
  "name": "returning_user"
  "tag": "returning_user(minutes=None, hours=None, days=None)"
"roman":
  "doc": "Given an index between 0 and 3999, returns a roman numeral between 1 and 4000."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2017"
  "insert": "roman()"
  "name": "roman"
  "tag": "roman(num, case=None)"
"run_action_in_session":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4816"
  "insert": "run_action_in_session()"
  "name": "run_action_in_session"
  "tag": "run_action_in_session(yaml_filename, session_id, action, arguments=None, secret=None, persistent=False, overwrite=False)"
"run_python_module":
  "doc": "Runs a python module, as though from the command line, and returns the output."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5809"
  "insert": "run_python_module()"
  "name": "run_python_module"
  "tag": "run_python_module(module, arguments=None)"
"selections":
  "doc": "Packs a list of objects in the appropriate format for including\nas code in a multiple-choice field."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5027"
  "insert": "selections()"
  "name": "selections"
  "tag": "selections(*pargs, **kwargs)"
"send_email":
  "doc": "Sends an e-mail and returns whether sending the e-mail was successful."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7518"
  "insert": "send_email()"
  "name": "send_email"
  "tag": "send_email(to=None, sender=None, reply_to=None, cc=None, bcc=None, body=None, html=None, subject='', template=None, task=None, task_persistent=False, attachments=None, mailgun_variables=None, dry_run=False)"
"send_fax":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7506"
  "insert": "send_fax()"
  "name": "send_fax"
  "tag": "send_fax(fax_number, file_object, config='default', country=None)"
"send_sms":
  "doc": "Sends a text message and returns whether sending the text was successful."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7364"
  "insert": "send_sms()"
  "name": "send_sms"
  "tag": "send_sms(to=None, body=None, template=None, task=None, task_persistent=False, attachments=None, config='default', dry_run=False)"
"server_capabilities":
  "doc": "Returns a dictionary with true or false values indicating various capabilities of the server."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1628"
  "insert": "server_capabilities()"
  "name": "server_capabilities"
  "tag": "server_capabilities()"
"session_tags":
  "doc": "Returns the set of tags with which the interview and session have\nbeen tagged."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1048"
  "insert": "session_tags()"
  "name": "session_tags"
  "tag": "session_tags()"
"set_country":
  "doc": "Sets the current country (e.g., &quot;US&quot;)."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2238"
  "insert": "set_country()"
  "name": "set_country"
  "tag": "set_country(country)"
"set_info":
  "doc": "Used to set the values of global variables you wish to retrieve through get_info()."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1214"
  "insert": "set_info()"
  "name": "set_info"
  "tag": "set_info(**kwargs)"
"set_language":
  "doc": "Sets the language to use for linguistic functions.\nE.g., set_language('es') to set the language to Spanish.\nUse the keyword argument &quot;dialect&quot; to set ..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2221"
  "insert": "set_language()"
  "name": "set_language"
  "tag": "set_language(lang, dialect=None)"
"set_live_help_status":
  "doc": "Defines whether live help features are available, the mode of chat,\nthe roles that the interview user will assume in the live chat\nsystem, and the roles of peop..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4295"
  "insert": "set_live_help_status()"
  "name": "set_live_help_status"
  "tag": "set_live_help_status(availability=None, mode=None, partner_roles=None)"
"set_locale":
  "doc": "Sets the current locale.  See also update_locale()."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2254"
  "insert": "set_locale()"
  "name": "set_locale"
  "tag": "set_locale(*pargs, **kwargs)"
"set_parts":
  "doc": "Sets parts of the page, such as words in the navigation bar and\nHTML in the page."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L945"
  "insert": "set_parts()"
  "name": "set_parts"
  "tag": "set_parts(**kwargs)"
"set_progress":
  "doc": "Sets the position of the progress meter."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1219"
  "insert": "set_progress()"
  "name": "set_progress"
  "tag": "set_progress(number)"
"set_save_status":
  "doc": "Indicates whether the current processing of the interview logic should result in a new step in the interview."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1263"
  "insert": "set_save_status()"
  "name": "set_save_status"
  "tag": "set_save_status(status)"
"set_session_variables":
  "doc": "Sets variables in the interview dictionary for the given interview session."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4808"
  "insert": "set_session_variables()"
  "name": "set_session_variables"
  "tag": "set_session_variables(yaml_filename, session_id, variables, secret=None, question_name=None, overwrite=False, process_objects=False)"
"set_status":
  "doc": "Sets various settings in the interview session."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8355"
  "insert": "set_status()"
  "name": "set_status"
  "tag": "set_status(**kwargs)"
"set_task_counter":
  "doc": "Allows you to manually set the number of times the task has been performed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8545"
  "insert": "set_task_counter()"
  "name": "set_task_counter"
  "tag": "set_task_counter(task, times, persistent=False)"
"set_title":
  "doc": "Obsolete name for the set_parts function"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L961"
  "insert": "set_title()"
  "name": "set_title"
  "tag": "set_title(**kwargs)"
"set_user_info":
  "doc": "Sets information about the given user, or the current user, if no user ID or e-mail is provided"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4764"
  "insert": "set_user_info()"
  "name": "set_user_info"
  "tag": "set_user_info(**kwargs)"
"set_variables":
  "doc": "Updates the interview answers using variable names and values specified in a dictionary"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4082"
  "insert": "set_variables()"
  "name": "set_variables"
  "tag": "set_variables(variables, process_objects=False)"
"showif":
  "doc": "Returns the variable indicated by the variable name if the\ncondition is true, but otherwise returns empty text, or other alternative text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4647"
  "insert": "showif()"
  "name": "showif"
  "tag": "showif(var, condition, alternative='')"
"showifdef":
  "doc": "Returns the variable indicated by the variable name if it is\ndefined, but otherwise returns empty text, or other alternative text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4257"
  "insert": "showifdef()"
  "name": "showifdef"
  "tag": "showifdef(var: str, alternative='')"
"single_paragraph":
  "doc": "Reduces the text to a single paragraph.  Useful when using Markdown\nto indent user-supplied text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4286"
  "insert": "single_paragraph()"
  "name": "single_paragraph"
  "tag": "single_paragraph(text)"
"single_to_double_newlines":
  "doc": "Converts single newlines to double newlines."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4969"
  "insert": "single_to_double_newlines()"
  "name": "single_to_double_newlines"
  "tag": "single_to_double_newlines(text)"
"space_to_underscore":
  "doc": "Converts spaces in the input to underscores in the output and removes characters not safe for filenames."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3297"
  "insert": "space_to_underscore()"
  "name": "space_to_underscore"
  "tag": "space_to_underscore(a)"
"split":
  "doc": "Splits text at particular breakpoints and returns the given piece."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4596"
  "insert": "split()"
  "name": "split"
  "tag": "split(text, breaks, index)"
"start_time":
  "doc": "Returns the time the interview was started, as a DADateTime object."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6270"
  "insert": "start_time()"
  "name": "start_time"
  "tag": "start_time(timezone=None)"
"stash_data":
  "doc": "Stores data in an encrypted form and returns a key and a decryption secret."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8556"
  "insert": "stash_data()"
  "name": "stash_data"
  "tag": "stash_data(data, expire=None)"
"state_name":
  "doc": "Given a two-digit U.S. state abbreviation or the abbreviation of a\nsubdivision of another country, returns the state/subdivision\nname."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L336"
  "insert": "state_name()"
  "name": "state_name"
  "tag": "state_name(state_code, country_code=None)"
"states_list":
  "doc": "Returns a list of U.S. states or subdivisions of another country,\nsuitable for use in a multiple choice field."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L638"
  "insert": "states_list()"
  "name": "states_list"
  "tag": "states_list(country_code=None)"
"static_image":
  "doc": "Inserts appropriate markup to include a static image.  If you know\nthe image path, you can just use the &quot;[FILE ...]&quot; markup.  This function is\nuseful ..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3439"
  "insert": "static_image()"
  "name": "static_image"
  "tag": "static_image(filereference, width=None)"
"store_variables_snapshot":
  "doc": "Stores a snapshot of the interview answers in non-encrypted JSON format."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3317"
  "insert": "store_variables_snapshot()"
  "name": "store_variables_snapshot"
  "tag": "store_variables_snapshot(data=None, include_internal=False, key=None, persistent=False)"
"subdivision_type":
  "doc": "Returns the name of the most common country subdivision type for\nthe given country code."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L365"
  "insert": "subdivision_type()"
  "name": "subdivision_type"
  "tag": "subdivision_type(country_code)"
"task_not_yet_performed":
  "doc": "Returns True if the task has never been performed, otherwise False."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8509"
  "insert": "task_not_yet_performed()"
  "name": "task_not_yet_performed"
  "tag": "task_not_yet_performed(task, persistent=False)"
"task_performed":
  "doc": "Returns True if the task has been performed at least once, otherwise False."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8496"
  "insert": "task_performed()"
  "name": "task_performed"
  "tag": "task_performed(task, persistent=False)"
"terminate_sms_session":
  "doc": "Terminates an SMS session for a phone number, whether the session exists or not."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L7346"
  "insert": "terminate_sms_session()"
  "name": "terminate_sms_session"
  "tag": "terminate_sms_session(phone_number, config='default')"
"times_task_performed":
  "doc": "Returns the number of times the task has been performed."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8532"
  "insert": "times_task_performed()"
  "name": "times_task_performed"
  "tag": "times_task_performed(task, persistent=False)"
"timezone_list":
  "doc": "Returns a list of timezone choices, expressed as text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L6171"
  "insert": "timezone_list()"
  "name": "timezone_list"
  "tag": "timezone_list()"
"title_case":
  "doc": "Returns the argument with the first letter of each word capitalized, as in a title."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "title_case()"
  "name": "title_case"
  "tag": "title_case(*args, **kwargs)"
"today":
  "doc": "Returns today's date at midnight as a DADateTime object."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5829"
  "insert": "today()"
  "name": "today"
  "tag": "today(timezone=None, format=None)"
"transform_json_variables":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L9162"
  "insert": "transform_json_variables()"
  "name": "transform_json_variables"
  "tag": "transform_json_variables(obj)"
"undefine":
  "doc": "Deletes the variable or variables if they exist."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4025"
  "insert": "undefine()"
  "name": "undefine"
  "tag": "undefine(*pargs, invalidate=False)"
"update_terms":
  "doc": "Defines terms and auto terms"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1227"
  "insert": "update_terms()"
  "name": "update_terms"
  "tag": "update_terms(dictionary, auto=False, language='*')"
"url_action":
  "doc": "Returns a URL to run an action in the interview."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3917"
  "insert": "url_action()"
  "name": "url_action"
  "tag": "url_action(action, **kwargs)"
"url_ask":
  "doc": "Like url_action, but accepts a data structure containing a sequence of variables to be sought."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8184"
  "insert": "url_ask()"
  "name": "url_ask"
  "tag": "url_ask(data)"
"url_of":
  "doc": "Returns a URL to a file within a docassemble package, or another page in the application."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1590"
  "insert": "url_of()"
  "name": "url_of"
  "tag": "url_of(file_reference, **kwargs)"
"us":
  "doc": !!null "null"
  "git": !!null "null"
  "insert": "us"
  "name": "us"
"us_districts":
  "doc": !!null "null"
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/legal.py#L512"
  "insert": "us_districts()"
  "name": "us_districts"
  "tag": "us_districts(bankruptcy=False)"
"user_has_privilege":
  "doc": "Given a privilege or a list of privileges, returns True if the user\nhas any of the privileges, False otherwise."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L664"
  "insert": "user_has_privilege()"
  "name": "user_has_privilege"
  "tag": "user_has_privilege(*pargs)"
"user_info":
  "doc": "Returns an object with information from the user profile.  Keys\ninclude first_name, last_name, email, country, subdivision_first,\nsubdivision_second, subdivisio..."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L702"
  "insert": "user_info()"
  "name": "user_info"
  "tag": "user_info()"
"user_lat_lon":
  "doc": "Returns the user's latitude and longitude as a tuple."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L782"
  "insert": "user_lat_lon()"
  "name": "user_lat_lon"
  "tag": "user_lat_lon()"
"user_logged_in":
  "doc": "Returns True if the user is logged in, False otherwise."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L225"
  "insert": "user_logged_in()"
  "name": "user_logged_in"
  "tag": "user_logged_in()"
"user_privileges":
  "doc": "Returns a list of the user's privileges.  For users who are not\nlogged in, this is always ['user']."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L657"
  "insert": "user_privileges()"
  "name": "user_privileges"
  "tag": "user_privileges()"
"validation_error":
  "doc": "Raises a validation error with a given message, optionally\nassociated with a field."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8165"
  "insert": "validation_error()"
  "name": "validation_error"
  "tag": "validation_error(the_message, field=None)"
"value":
  "doc": "Returns the value of the variable given by the string 'var'."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4230"
  "insert": "value()"
  "name": "value"
  "tag": "value(var: str)"
"variables_as_json":
  "doc": "Sends an HTTP response with all variables in JSON format."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3313"
  "insert": "variables_as_json()"
  "name": "variables_as_json"
  "tag": "variables_as_json(include_internal=False)"
"verb_past":
  "doc": "Given a verb, returns the past tense of the verb."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "verb_past()"
  "name": "verb_past"
  "tag": "verb_past(*args, **kwargs)"
"verb_present":
  "doc": "Given a verb, returns the present tense of the verb."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L3185"
  "insert": "verb_present()"
  "name": "verb_present"
  "tag": "verb_present(*args, **kwargs)"
"verbatim":
  "doc": "Disables the effect of formatting characters in the text."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4913"
  "insert": "verbatim()"
  "name": "verbatim"
  "tag": "verbatim(text)"
"word":
  "doc": "Returns the word translated into the current language.  If a translation\nis not known, the input is returned."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L2094"
  "insert": "word()"
  "name": "word"
  "tag": "word(the_word, **kwargs)"
"write_record":
  "doc": "Stores the data in a SQL database for later retrieval with the\nkey.  Returns the unique ID integers of the saved record."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L1575"
  "insert": "write_record()"
  "name": "write_record"
  "tag": "write_record(key, data)"
"year_of":
  "doc": "Interprets the_date as a date and returns the year."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L5889"
  "insert": "year_of()"
  "name": "year_of"
  "tag": "year_of(the_date, language=None)"
"yesno":
  "doc": "Returns 'Yes' or 'No' depending on whether the given value is true.\nThis is used for populating PDF checkboxes."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/functions.py#L4563"
  "insert": "yesno()"
  "name": "yesno"
  "tag": "yesno(the_value, invert=False)"
"zip_file":
  "doc": "Returns a ZIP file as a DAFile containing the files provided as arguments."
  "git": "https://github.com/jhpyle/docassemble/blob/master/docassemble_base/docassemble/base/util.py#L8122"
  "insert": "zip_file()"
  "name": "zip_file"
  "tag": "zip_file(*pargs, **kwargs)"
